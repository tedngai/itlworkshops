<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>itlworkshops</title>
    <description>This is a repository of our ongoing projects.</description>
    <link>http://localhost:4000/itlworkshops/</link>
    <atom:link href="http://localhost:4000/itlworkshops/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 07 Apr 2019 13:06:08 -0400</pubDate>
    <lastBuildDate>Sun, 07 Apr 2019 13:06:08 -0400</lastBuildDate>
    <generator>Jekyll v3.7.4</generator>
    
      <item>
        <title>Natural Language Processing Part 2 Sentiment Analysis &amp; Topic Modeling</title>
        <description>&lt;hr /&gt;

&lt;h2 id=&quot;project-description&quot;&gt;Project Description&lt;/h2&gt;

&lt;p&gt;The objective of this workshop is to go through all the steps invovled to create a 3D terrain model in Rhino using &lt;a href=&quot;https://www.usgs.gov/core-science-systems/ngp/3dep/about-3dep-products-services&quot;&gt;3D Elevation Program&lt;/a&gt; (3DEP) data from &lt;a href=&quot;https://www.usgs.gov/&quot;&gt;United States Geological Survey&lt;/a&gt; (USGS), downloadable from &lt;a href=&quot;https://viewer.nationalmap.gov/basic/&quot;&gt;The National Map&lt;/a&gt;. This workshop assumes you already know Rhino3D.&lt;/p&gt;

&lt;h3 id=&quot;3dep&quot;&gt;3DEP&lt;/h3&gt;

&lt;p&gt;3DEP is a branded product consist of a number of elevation products such as standard digital elevation models (DEM), Light Detection and Ranging (LIDAR) data, and Interferometric synthetic-aperture radar (IfSAR) data. This workshop will only cover the workflow for working with DEMs.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://viewer.nationalmap.gov/basic/&quot;&gt;The National Map&lt;/a&gt; distributes standard DEMs in various resolutions. In USGS terminology, the DEM dataset can be separated into 2 categories - &lt;strong&gt;Seamless&lt;/strong&gt; and &lt;strong&gt;Project-based&lt;/strong&gt;. Seamless datasets are created from elevation data sourced from multiple technologies spanning decades. Although it is updated continually, positional and temporal accuracies might be an issue. It is best to use this dataset as reference only. The reason you might want to use this dataset is because it is the only thing available for your area of interest. Project-based data, on the other hand, are produced from LIDAR and IfSAR data, and they are the most up-to-date and accurate. However, the availability is limited.&lt;/p&gt;

&lt;p&gt;The DEM datasets have a number of resolutions you can find: 1-meter, 1/9 arc-second, 5-meter, 1/3 arc-second, 1 arc-second, and 2 arc-second. These numbers indicate now big each pixel represents in real space. The datasets come as rasters or images, so 1-meter dataset would mean each pixel equates to 1x1 meter. 1/9 arc-second is roughly 3-meters, this dataset is only available for around 25% of the conterminous U.S.. 1/3 arc-second is approximately 10-meters and this dataset has full coverage of the 48 conterminous states, Hawaii, and U.S. territories.&lt;/p&gt;

&lt;h1 id=&quot;step-1&quot;&gt;Step 1&lt;/h1&gt;
&lt;h2 id=&quot;download-data-from-the-national-map&quot;&gt;Download Data from The National Map&lt;/h2&gt;

&lt;p&gt;To begin this workshop, we will first go download our desired DEM data. Go to &lt;a href=&quot;https://viewer.nationalmap.gov/basic/&quot;&gt;The National Map&lt;/a&gt; and check &lt;strong&gt;Elevation Product (3DEP)&lt;/strong&gt;, and check the desired resolution for your area of interest. If you choose 1-meter or 1/9 arc-second data, only &lt;strong&gt;IMG&lt;/strong&gt; file format is available. If you choose 1/3 arc-second or larger data, you have a choice of &lt;strong&gt;ArcGrid&lt;/strong&gt;, &lt;strong&gt;GridFloat&lt;/strong&gt;, or &lt;strong&gt;IMG&lt;/strong&gt;, we will stick to &lt;strong&gt;IMG&lt;/strong&gt; for this session.&lt;/p&gt;

&lt;p&gt;You can click on &lt;strong&gt;Show Availability&lt;/strong&gt; to see if the data at your specific resolution is available for your area.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../assets/images/GIS/pic_GIS_nationalmap.JPG&quot; alt=&quot;national map&quot; height=&quot;100%&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On the map, zoom to your area and make sure &lt;strong&gt;Current Extent&lt;/strong&gt; is hightlighted, then &lt;strong&gt;PRESS Find Products&lt;/strong&gt;, the web app will launch a search using the current extent as search parameter, and you will be presented with a list of search results.&lt;/p&gt;

&lt;p&gt;On the results list, you can click on &lt;strong&gt;Footprint&lt;/strong&gt; to see where the DEM tile is. In our case, Low Manhattan is splitted into 2 tiles, so we will need to download both tiles. Simply click on &lt;strong&gt;Download&lt;/strong&gt; for each tile and save the files to a folder of your choice.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../assets/images/GIS/pic_GIS_nationalmap_footprint.JPG&quot; alt=&quot;national map&quot; height=&quot;100%&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For each download there should be a &lt;strong&gt;.ZIP&lt;/strong&gt; file, and you will find many files when unzipped so unzip them into a separate folder. In the long list of files, you should see one with an extension &lt;strong&gt;.IMG&lt;/strong&gt;. If you are on Windows and do not see file extensions, please follow this link - &lt;a href=&quot;https://www.howtohaven.com/system/show-file-extensions-in-windows-explorer.shtml&quot;&gt;Show file extension.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../assets/images/GIS/pic_GIS_nationalmap_savefile.JPG&quot; alt=&quot;national map&quot; height=&quot;50%&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;step-2&quot;&gt;Step 2&lt;/h1&gt;
&lt;h2 id=&quot;qgis&quot;&gt;QGIS&lt;/h2&gt;

&lt;p&gt;QGIS is an opensource GIS platform that has a very active community of developers constantly making updates and changes. It is a very powerful tool that rivals any commercial software. Download and install the current version, as of writing, the stable release is 3.4. As a suggestion, only install stable releases because you may encounter compatibility issues sometimes. We will not go through specific installation instructions, there should be plenty of online materials if you need assistance.&lt;/p&gt;

&lt;p&gt;When you are done installing the software, &lt;strong&gt;launch QGIS&lt;/strong&gt;. On the upper left corner, click &lt;strong&gt;Project &amp;gt; New&lt;/strong&gt;, you should get a blank screen as the following.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../assets/images/GIS/pic_GIS_qgis.JPG&quot; alt=&quot;national map&quot; height=&quot;50%&quot; width=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;summary&quot;&gt;Summary&lt;/h1&gt;

&lt;h3 id=&quot;what-you-have-learned&quot;&gt;What You have Learned&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;How to create and assign value to a variable&lt;/li&gt;
  &lt;li&gt;How to create and assign values a list&lt;/li&gt;
  &lt;li&gt;How to create and assign values a list of lists&lt;/li&gt;
  &lt;li&gt;How to bring data into Python as text or csv files&lt;/li&gt;
  &lt;li&gt;How to create and use a counter&lt;/li&gt;
  &lt;li&gt;How to write a basic function&lt;/li&gt;
  &lt;li&gt;How to call a basic function&lt;/li&gt;
  &lt;li&gt;Basic loop structure - how to use for-loops&lt;/li&gt;
  &lt;li&gt;How to import packages in Python&lt;/li&gt;
  &lt;li&gt;How to use basic functions of packages like Pandas, Plotly, BeautifulSoup&lt;/li&gt;
  &lt;li&gt;How to create interactive plots with Plotly.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 28 Mar 2019 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/itlworkshops/2019/NLP_part2/</link>
        <guid isPermaLink="true">http://localhost:4000/itlworkshops/2019/NLP_part2/</guid>
        
        
      </item>
    
      <item>
        <title>Natural Language Processing Part 1 Data Cleanup &amp; Exploratory Data Analysis</title>
        <description>&lt;p&gt;&lt;img src=&quot;../../assets/images/NLP/AndrewYang.jpg&quot; alt=&quot;AndrewYang&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;project-description&quot;&gt;Project Description&lt;/h2&gt;

&lt;p&gt;This is part 1 of the Natural Language Processing module. The process described here largely follows the structure of Alice Zhao’s (A Dash of Data) &lt;a href=&quot;https://www.youtube.com/watch?v=xvqsFTUsOmc&quot; target=&quot;_blank&quot;&gt;Presentation on NLP at PyOhio 2018&lt;/a&gt;. This first part will mainly focused on webscraping and cleaning up data for Natural Language Processing. We will also deviate from Alice’s presentation and scrape our own dataset from &lt;a href=&quot;https://jrescribe.com/&quot; target=&quot;blank&quot;&gt;Joe Rogan’s podcast transcript&lt;/a&gt;. The transcript from Rogan’s Podcast is preferred because of the length and the varieties of his interviews, we get some very interesting results.&lt;/p&gt;

&lt;p&gt;The main goal for this module is to introduce the idea of vectorization of data, an essential step in regression and classification, which is the precursor to machine learning. When face with data types such as word or sound, we need to find ways to represent the data with numbers, and the numerical representation would be called &lt;strong&gt;Vectors&lt;/strong&gt; for 1-dimensional values, &lt;strong&gt;Matrices&lt;/strong&gt; for 2-dimensional values, and &lt;strong&gt;Tensors&lt;/strong&gt; for higher dimensions. NLP relies on a package in &lt;a href=&quot;https://scikit-learn.org/stable/&quot; target=&quot;_blank&quot;&gt;SCIKIT-Learn&lt;/a&gt;, a very popular machine learning library in python, to convert words to vectors, which then enable us to do higher level analysis.&lt;/p&gt;

&lt;p&gt;Before you begin, you must have completed the installation and visualiation modules so you have working knowledge of anaconda and regular expression.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;step-1&quot;&gt;Step 1&lt;/h1&gt;
&lt;h2 id=&quot;download-data&quot;&gt;Download Data&lt;/h2&gt;

&lt;p&gt;For this exercise we will be using &lt;strong&gt;BeautifulSoup&lt;/strong&gt; to scrape data off  &lt;a href=&quot;https://jrescribe.com/&quot; target=&quot;blank&quot;&gt;Joe Rogan’s podcast transcript&lt;/a&gt; site, and I have chosen 16 interviews based on the range of ideas being discussed. To get that started, import the following packages.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pickle&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;bs4&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next we will define a function to launch BeautifulSoup and scrape the data, a list of urls to the interview transcripts, a list of speakers, and a list of the full name of the speakers.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;url_to_transcript&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'lxml'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;class_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;content&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'p'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'https://jrescribe.com/transcripts/p1255.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'https://jrescribe.com/transcripts/p1245.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'https://jrescribe.com/transcripts/p1233.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'https://jrescribe.com/transcripts/p1213.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'https://jrescribe.com/transcripts/p1227.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'https://jrescribe.com/transcripts/p1216.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'https://jrescribe.com/transcripts/p1236.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'https://jrescribe.com/transcripts/p1234.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'https://jrescribe.com/transcripts/p1198.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'https://jrescribe.com/transcripts/p1184.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'https://jrescribe.com/transcripts/p1169.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'https://jrescribe.com/transcripts/p1121.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'https://jrescribe.com/transcripts/p1260.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'https://jrescribe.com/transcripts/p1248.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'https://jrescribe.com/transcripts/p1241.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'https://jrescribe.com/transcripts/p1240.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;speakers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'jones'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'yang'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'cox'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'weil'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'tyson'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'penrose'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'dorsey'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'sinclair'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;'brown'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'barr'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'musk'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'pollen'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'lewis'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ottman'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'harris'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'galante'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
           &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;full_names&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Alex Jones'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Andrew Yang'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Brian Cox'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Andrew Weil'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Mike Tyson'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Roger Penrose'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;'Jack Dorsey'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'David Sinclair'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Darren Brown'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Rosanne Barr'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Elon Musk'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Michael Pollen'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;'Lennox Lewis'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Bill Ottman'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Sam Harris'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Forrest Galante'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;text = [p.text for p in soup.find(class_=&quot;content&quot;).find_all('p')]&lt;/code&gt; This line in the function is the key that pulls out the text the whole interview. It finds the div tag &lt;strong&gt;class=”content”&lt;/strong&gt; which contains the transcript, and strips out all the html code. Next we call the function to store all the text into the variable &lt;strong&gt;transcript&lt;/strong&gt;. This is a very Pythonic syntax which is a short form for writing a loop. In the long form, it is equivalent to:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;class_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;content&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'p'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And we can even break this down further into simpler components, which is to say, first find the div class named content, then find all the paragraph tags in there, then put all those paragraphs into the text variable.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;class_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;content&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'p'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now let’s get back on track, call the function to process all the urls and get all the text into the transcript variable.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;transcript&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_to_transcript&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;u&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Again, notice the short form. This could have been written as-&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;transcript&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;u&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;transcript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_to_transcript&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once its done scraping, now we &lt;strong&gt;“pickle”&lt;/strong&gt; all the transcripts into our local storage. &lt;strong&gt;Pickling&lt;/strong&gt; here means saving what ever is in the variable into a file, which can then be called later. The following code shows how to &lt;strong&gt;pickle&lt;/strong&gt; the transcripts and using the &lt;strong&gt;speakers&lt;/strong&gt; list to save each transcrption with their names. And later we retrieve the &lt;strong&gt;pickled&lt;/strong&gt; data back and create a &lt;strong&gt;dictionary&lt;/strong&gt; to correlate the &lt;strong&gt;speakers&lt;/strong&gt; to the &lt;strong&gt;transcripts&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;speakers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'transcripts/'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;.txt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'wb'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;pickle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transcript&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        
&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;speakers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'transcripts/'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'rb'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pickle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Typing the following and see that you now have a dictionary with &lt;strong&gt;key:speakers&lt;/strong&gt; and &lt;strong&gt;value:transcript&lt;/strong&gt; structure.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;However, you can see that the &lt;strong&gt;transcripts&lt;/strong&gt; is a &lt;strong&gt;list&lt;/strong&gt; of texts due to the function call &lt;strong&gt;find_all(‘p’)&lt;/strong&gt;, all html paragraphs with a &lt;strong&gt;&amp;lt;p&amp;gt;&lt;/strong&gt; tag were imported as a separate list item. &lt;strong&gt;[:2]&lt;/strong&gt; shows the beginning to the 3rd item in the list, and &lt;strong&gt;[1:5]&lt;/strong&gt; will show the second to 6th item in the list.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'weil'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We need to change the dictionary from &lt;strong&gt;value:list&lt;/strong&gt; to &lt;strong&gt;value:string&lt;/strong&gt;. We can do that with a function.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;combine_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;list_of_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;combined_text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;list_of_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;combined_text&lt;/span&gt;
  
&lt;span class=&quot;n&quot;&gt;data_combined&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;combine_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next we can put everything into a Pandas DataFrame.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_option&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'max_colwidth'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;150&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data_df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_combined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transpose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data_df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'transcript'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data_df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now you get a small glimpse of what the transcript look like, we now need to clean up all the text. By that, it means we need to get rid all the things that are irrelevant to our analysis such as punctuations, capitalization, numerical values, symbols…etc. The most effective method to do this is by using &lt;strong&gt;regular expressions&lt;/strong&gt;. We have already done a little bit &lt;strong&gt;regex&lt;/strong&gt; in the previous exercise so we will not discuss the overall concept, and we will just concentrate on the specific syntax used here and explain what it achieves. Type in &lt;code class=&quot;highlighter-rouge&quot;&gt;data_df.transcript.loc['weil']&lt;/code&gt; to display the transcript for Dr. Andrew Weil and see what kind of clean up you should expect.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;‘Dr. Andrew Weil is a physician, author, spokesperson, and broadly described “guru” of the alternative medical brands: holistic health and integrative medicine.\xa0https://matcha.com/pages/joerogan Help improve this transcript! Hello friends how's everybody doing out there I hope you groovy I hope you're groovy this holiday season hits this season it's interesting how we need Seasons we need two reasons for stuff to celebrate when we give you a reason imma give me an interesting one now through December 25th 23andMe DNA kits are on sale 23andMe if you don't know what it is it's a DNA test kit they send you a package with a tube in it you spit in the tube provided in your 23andMe kit you register your sample to your personal 23andMe account and in a few weeks you receive your personalized online reports 23andMe it's based on the 23 pairs of chromosomes that help make up your DNA and with this test they can tell you all sorts of stuff about your jeans in your ancestors and they cannot explain about why you have certain things going on with your body like how about mosquito bite frequency is that one actually you some people find that they get more mosquito bites and other people and what makes some people more attractive to mosquitoes and others will genetics may be partly to blame about cilantro taste aversion like the some people really fucking hate cilantro they think it tastes like soap if you have a genetic marker associated with this aversion that might be you weird right about muscle composition does a genetic muscle composition it's common in Elite power athletes the studies have found that almost all Elite power athletes have a very specific genetic variant in a gene related to muscle composition 23andMe muscle composition important about that they can they can help you explore the link between your DNA in your muscle composition also find out you know what what do you got in there when you got you got African you got European like yes Asian in their butts really essentially and just really interesting I did it I found out I'm 1.6% African mostly Italian which is what I thought and the rest is either Irish or English you know interesting stuff folks and super easy to do and now through December 25th you can get 30% off any 23andMe kit you order your DNA kit at 23andme.com Rogan that's the number to 3 a.m. D and me.com road again it's 23andme.com Rogan December 21st 30% off any 23andMe kit we're also brought you buy stamps. now if you send things to the post office on a regular basis and you don't know about urine for a tree to stamps.com is the easiest way to access all of the amazing Services of the US Post Office and now is the holidays the fucking holidays man those lines are brutal you got to send things you want to you want to wait that long you don't have to stamps.com it's saves you so much time this is how it works really easy you can buy and print official US postage for any letter any package any class of mail using your own computer and printer and then you let the mail carrier pick it up or you drop it off in the mailbox and you're done no trips to the post office required it could not be easier it's a wonderful thing and you don't have to lie world's expensive postage meters stamps.com print postage any day any time whatever you want not only save you time to save you money is stamps.com helps you print the right amount of postage every time never overpay again and with stamps.com you get discounts on postage you can't even get at the post office just think about all the time and the money that you'll save it's a wonderful gift as well folks and right now you too can enjoy the stamps.com service with a special offer that includes a 4 week trial class postage and a digital scale without long-term commitments go to stamps.com click on the microphone at the top of the home ‘&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As you can see the text is relatively clean, so we will just focus one the obvious issues.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;regex&lt;/strong&gt; routine is written as a function call &lt;strong&gt;clean_text_round1&lt;/strong&gt;. What kind of cleanup you will need really depends on where you scraped your text from, and in our case, there are quite a bit of html The first line removes capitalization. The second line removes anything in square brackets, &lt;code class=&quot;highlighter-rouge&quot;&gt;\&lt;/code&gt; is an escape character so this -&lt;code class=&quot;highlighter-rouge&quot;&gt;\[   \]&lt;/code&gt; means to treat the square brackets is something to search for and not something as part of the programming language. &lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt; is any character including any alphanumeric character, &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; is to match the expression to the left 0 or more times, &lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt; is to match the expression to the left 0 or 1 times. In all &lt;code class=&quot;highlighter-rouge&quot;&gt;\[.*?\]&lt;/code&gt; means match anything that’s within square brackets and replace it with &lt;code class=&quot;highlighter-rouge&quot;&gt;''&lt;/code&gt; which means empty string. The third line removes punctuations. The fourth line removes any words containing numbers. &lt;code class=&quot;highlighter-rouge&quot;&gt;\d&lt;/code&gt; is any digits sandwiched between this - &lt;code class=&quot;highlighter-rouge&quot;&gt;\w&lt;/code&gt; - any alphanumeric characters &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; repeated 0 or more times.’&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;clean_text_round1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;[.*?&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;]'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'[&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s]'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;escape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;punctuation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w*&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w*'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'[^A-Za-z0-9 ]+'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;round1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clean_text_round1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;data_clean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transcript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;round1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Once the first round of cleaning is done, type &lt;code class=&quot;highlighter-rouge&quot;&gt;data_clean.transcript.loc['weil']&lt;/code&gt; to see the “clean” text and see what else needs to be done. But in our case here, it looks like we can already move forward to the next step.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;‘dr andrew weil is a physician author spokesperson and broadly described guru of the alternative medical brands holistic health and integrative medicinehttpsmatchacompagesjoerogan help improve this transcript hello friends hows everybody doing out there i hope you groovy i hope youre groovy this holiday season hits this season its interesting how we need seasons we need two reasons for stuff to celebrate when we give you a reason imma give me an interesting one now through december   dna kits are on sale  if you dont know what it is its a dna test kit they send you a package with a tube in it you spit in the tube provided in your  kit you register your sample to your personal  account and in a few weeks you receive your personalized online reports  its based on the  pairs of chromosomes that help make up your dna and with this test they can tell you all sorts of stuff about your jeans in your ancestors and they cannot explain about why you have certain things going on with your body like how about mosquito bite frequency is that one actually you some people find that they get more mosquito bites and other people and what makes some people more attractive to mosquitoes and others will genetics may be partly to blame about cilantro taste aversion like the some people really fucking hate cilantro they think it tastes like soap if you have a genetic marker associated with this aversion that might be you weird right about muscle composition does a genetic muscle composition its common in elite power athletes the studies have found that almost all elite power athletes have a very specific genetic variant in a gene related to muscle composition  muscle composition important about that they can they can help you explore the link between your dna in your muscle composition also find out you know what what do you got in there when you got you got african you got european like yes asian in their butts really essentially and just really interesting i did it i found out im  african mostly italian which is what i thought and the rest is either irish or english you know interesting stuff folks and super easy to do and now through december  you can get  off any  kit you order your dna kit at  rogan thats the number to  am d and mecom road again its  rogan december   off any  kit were also brought you buy stamps now if you send things to the post office’&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Before we do that, let’s pickle the corpus.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;data_df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_pickle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'corpus.pkl'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now the important step is to &lt;strong&gt;vectorize&lt;/strong&gt; the text.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn.feature_extraction.text&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CountVectorizer&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;cv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CountVectorizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stop_words&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'english'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data_cv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit_transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_clean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transcript&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data_dtm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_cv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toarray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_feature_names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data_dtm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_clean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data_dtm&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Last but not least, pickle all the data generated thus far.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;data_dtm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_pickle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'dtm.pkl'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data_clean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_pickle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data_clean.pkl'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pickle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'cv.pkl'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'wb'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;step-2&quot;&gt;Step 2&lt;/h1&gt;
&lt;h2 id=&quot;exploratory-data-analysis&quot;&gt;Exploratory Data Analysis&lt;/h2&gt;

&lt;p&gt;EDA is an important step in data science. This is when you are trying different ways to see how to get some useful information out of the dataset. So lets start by importing pandas and loading the pickled data back.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_pickle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'dtm.pkl'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transpose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;First thing to try is to see how many times each speaker say a certain word. Since the whole transcript is vectorized, this is quite easy to do with a &lt;strong&gt;sort&lt;/strong&gt; function.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;top_dict&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;top&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort_values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ascending&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;top_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    
&lt;span class=&quot;n&quot;&gt;top_dict&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;{‘jones’: [(‘like’, 511),
 (‘people’, 309),
 (‘know’, 271),
 (‘dont’, 257),
 (‘just’, 247),
 (‘im’, 237),
 (‘thats’, 227),
 (‘going’, 199),
 (‘think’, 175),
 (‘got’, 170),
 (‘want’, 145),
 (‘youre’, 144),
 (‘said’, 123),
 (‘theres’, 122),
 (‘theyre’, 120),
 (‘things’, 113),
 (‘right’, 108),
 (‘say’, 106),
 (‘saying’, 93),
 (‘really’, 92),
 (‘believe’, 86),
 (‘years’, 81),
 (‘thing’, 80),
 (‘hes’, 78),
 (‘did’, 77),
 (‘real’, 76),
 (‘cuz’, 73),
 (‘yeah’, 70),
 (‘time’, 68),
 (‘didnt’, 68),
 (‘way’, 66),
 (‘big’, 66),
 (‘good’, 63),
 (‘trying’, 63),
 (‘okay’, 62),
 (‘stuff’, 59),
 (‘talk’, 58),
 (‘guy’, 58),
 (‘lot’, 58),
 (‘doing’, 56),
 (‘mean’, 56),
 (‘ive’, 56),
 (‘look’, 55),
 (‘tell’, 54),
 (‘ago’, 52),
 (‘whats’, 52),
 (‘god’, 50),
 (‘bad’, 50),
 (‘make’, 49),
 (‘happened’, 48),
 (‘point’, 44),
 (‘fucking’, 43),
 (‘aliens’, 43),
 (‘black’, 42),
 (‘government’, 41),
 (‘does’, 40),
 (‘man’, 39),
 (‘world’, 38),
 (‘come’, 38),
 (‘yes’, 38),
 (‘little’, 37),
 (‘head’, 37),
 (‘actually’, 37),
 (‘alex’, 37),
 (‘crazy’, 37),
 (‘talking’, 37),
 (‘try’, 36),
 (‘told’, 34),
 (‘love’, 33),
 (‘doesnt’, 33),
 (‘shit’, 33),
 (‘says’, 33),
 (‘kill’, 33),
 (‘ill’, 33),
 (‘life’, 32),
 (‘went’, 32),
 (‘true’, 31),
 (‘nazis’, 31),
 (‘everybody’, 31),
 (‘let’, 31),
 (‘war’, 31),
 (‘kind’, 31),
 (‘jones’, 30),
 (‘getting’, 30),
 (‘came’, 30),
 (‘telling’, 30),
 (‘understand’, 29),
 (‘control’, 29),
 (‘sure’, 28),
 (‘sandy’, 28)],
‘yang’: [(‘like’, 515),
 (‘people’, 190),
 (‘going’, 166),
 (‘know’, 134),
 (‘just’, 122),
 (‘thats’, 102),
 (‘im’, 84),
 (‘really’, 77),
 (‘say’, 69),
 (‘right’, 66),
 (‘youre’, 65),
 (‘theyre’, 64),
 (‘lot’, 63),
 (‘think’, 60),
 (‘actually’, 58),
 (‘make’, 56),
 (‘money’, 50),
 (‘dont’, 50),
 (‘job’, 46),
 (‘jobs’, 45),
 (‘mean’, 44),
 (‘look’, 43),
 (‘way’, 43),
 (‘things’, 42),
 (‘got’, 38),
 (‘time’, 38),
 (‘cuz’, 38),
 (‘theres’, 38),
 (‘truck’, 36),
 (‘thing’, 35),
 (‘years’, 35),
 (‘need’, 34),
 (‘start’, 34),
 (‘getting’, 34),
 (‘college’, 32),
 (‘new’, 31),
 (‘work’, 31),
 (‘month’, 27),
 (‘economy’, 26),
 (‘want’, 26),
 (‘doing’, 26),
 (‘idea’, 25),
 (‘man’, 24),
 (‘year’, 24),
 (‘president’, 24),
 (‘hey’, 24),
 (‘number’, 23),
 (‘thousand’, 23),
 (‘dollars’, 23),
 (‘try’, 22),
 (‘bucks’, 22),
 (‘states’, 22),
 (‘good’, 21),
 (‘trying’, 21),
 (‘trucks’, 21),
 (‘income’, 20),
 (‘robot’, 20),
 (‘coming’, 20),
 (‘basic’, 20),
 (‘problem’, 20),
 (‘joe’, 20),
 (‘great’, 19),
 (‘country’, 19),
 (‘saying’, 19),
 (‘stuff’, 19),
 (‘better’, 19),
 (‘said’, 19),
 (‘running’, 19),
 (‘real’, 19),
 (‘talking’, 18),
 (‘yeah’, 18),
 (‘universal’, 18),
 (‘americans’, 18),
 (‘million’, 18),
 (‘end’, 17),
 (‘school’, 17),
 (‘away’, 17),
 (‘making’, 17),
 (‘does’, 17),
 (‘truckers’, 16),
 (‘kids’, 16),
 (‘life’, 16),
 (‘reason’, 16),
 (‘ive’, 16),
 (‘economic’, 16),
 (‘sure’, 15),
 (‘numbers’, 15),
 (‘iowa’, 15),
 (‘cash’, 15),
 (‘rogan’, 15)],&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;summary&quot;&gt;Summary&lt;/h1&gt;

&lt;h3 id=&quot;what-you-have-learned&quot;&gt;What You have Learned&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;How to create and assign value to a variable&lt;/li&gt;
  &lt;li&gt;How to create and assign values a list&lt;/li&gt;
  &lt;li&gt;How to create and assign values a list of lists&lt;/li&gt;
  &lt;li&gt;How to bring data into Python as text or csv files&lt;/li&gt;
  &lt;li&gt;How to create and use a counter&lt;/li&gt;
  &lt;li&gt;How to write a basic function&lt;/li&gt;
  &lt;li&gt;How to call a basic function&lt;/li&gt;
  &lt;li&gt;Basic loop structure - how to use for-loops&lt;/li&gt;
  &lt;li&gt;How to import packages in Python&lt;/li&gt;
  &lt;li&gt;How to use basic functions of packages like Pandas, Plotly, BeautifulSoup&lt;/li&gt;
  &lt;li&gt;How to create interactive plots with Plotly.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 23 Mar 2019 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/itlworkshops/2019/NLP_part1/</link>
        <guid isPermaLink="true">http://localhost:4000/itlworkshops/2019/NLP_part1/</guid>
        
        
      </item>
    
      <item>
        <title>GIS Workshop Terrain Analysis and Modeling</title>
        <description>&lt;div class=&quot;sketchfab-embed-wrapper&quot;&gt;&lt;iframe width=&quot;100%&quot; height=&quot;480&quot; src=&quot;https://sketchfab.com/models/a7979bace34442d1b6655c37bd348a5b/embed&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; fullscreen; vr&quot; mozallowfullscreen=&quot;true&quot; webkitallowfullscreen=&quot;true&quot;&gt;&lt;/iframe&gt;
​
&lt;p style=&quot;font-size: 13px; font-weight: normal; margin: 5px; color: #4A4A4A;&quot;&gt;
    &lt;a href=&quot;https://sketchfab.com/3d-models/world-trade-center-dem-a7979bace34442d1b6655c37bd348a5b?utm_medium=embed&amp;amp;utm_source=website&amp;amp;utm_campaign=share-popup&quot; target=&quot;_blank&quot; style=&quot;font-weight: bold; color: #1CAAD9;&quot;&gt;World Trade Center DEM&lt;/a&gt;
    by &lt;a href=&quot;https://sketchfab.com/itl?utm_medium=embed&amp;amp;utm_source=website&amp;amp;utm_campaign=share-popup&quot; target=&quot;_blank&quot; style=&quot;font-weight: bold; color: #1CAAD9;&quot;&gt;itl&lt;/a&gt;
    on &lt;a href=&quot;https://sketchfab.com?utm_medium=embed&amp;amp;utm_source=website&amp;amp;utm_campaign=share-popup&quot; target=&quot;_blank&quot; style=&quot;font-weight: bold; color: #1CAAD9;&quot;&gt;Sketchfab&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;hr /&gt;

&lt;h2 id=&quot;project-description&quot;&gt;Project Description&lt;/h2&gt;

&lt;p&gt;The objective of this workshop is to go through all the steps invovled to create a 3D terrain model in Rhino using &lt;a href=&quot;https://www.usgs.gov/core-science-systems/ngp/3dep/about-3dep-products-services&quot;&gt;3D Elevation Program&lt;/a&gt; (3DEP) data from &lt;a href=&quot;https://www.usgs.gov/&quot;&gt;United States Geological Survey&lt;/a&gt; (USGS), downloadable from &lt;a href=&quot;https://viewer.nationalmap.gov/basic/&quot;&gt;The National Map&lt;/a&gt;. This workshop assumes you already know Rhino3D.&lt;/p&gt;

&lt;h3 id=&quot;3dep&quot;&gt;3DEP&lt;/h3&gt;

&lt;p&gt;3DEP is a branded product consist of a number of elevation products such as standard digital elevation models (DEM), Light Detection and Ranging (LIDAR) data, and Interferometric synthetic-aperture radar (IfSAR) data. This workshop will only cover the workflow for working with DEMs.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://viewer.nationalmap.gov/basic/&quot;&gt;The National Map&lt;/a&gt; distributes standard DEMs in various resolutions. In USGS terminology, the DEM dataset can be separated into 2 categories - &lt;strong&gt;Seamless&lt;/strong&gt; and &lt;strong&gt;Project-based&lt;/strong&gt;. Seamless datasets are created from elevation data sourced from multiple technologies spanning decades. Although it is updated continually, positional and temporal accuracies might be an issue. It is best to use this dataset as reference only. The reason you might want to use this dataset is because it is the only thing available for your area of interest. Project-based data, on the other hand, are produced from LIDAR and IfSAR data, and they are the most up-to-date and accurate. However, the availability is limited.&lt;/p&gt;

&lt;p&gt;The DEM datasets have a number of resolutions you can find: 1-meter, 1/9 arc-second, 5-meter, 1/3 arc-second, 1 arc-second, and 2 arc-second. These numbers indicate now big each pixel represents in real space. The datasets come as rasters or images, so 1-meter dataset would mean each pixel equates to 1x1 meter. 1/9 arc-second is roughly 3-meters, this dataset is only available for around 25% of the conterminous U.S.. 1/3 arc-second is approximately 10-meters and this dataset has full coverage of the 48 conterminous states, Hawaii, and U.S. territories.&lt;/p&gt;

&lt;h1 id=&quot;step-1&quot;&gt;Step 1&lt;/h1&gt;
&lt;h2 id=&quot;download-data-from-the-national-map&quot;&gt;Download Data from The National Map&lt;/h2&gt;

&lt;p&gt;To begin this workshop, we will first go download our desired DEM data. Go to &lt;a href=&quot;https://viewer.nationalmap.gov/basic/&quot;&gt;The National Map&lt;/a&gt; and check &lt;strong&gt;Elevation Product (3DEP)&lt;/strong&gt;, and check the desired resolution for your area of interest. If you choose 1-meter or 1/9 arc-second data, only &lt;strong&gt;IMG&lt;/strong&gt; file format is available. If you choose 1/3 arc-second or larger data, you have a choice of &lt;strong&gt;ArcGrid&lt;/strong&gt;, &lt;strong&gt;GridFloat&lt;/strong&gt;, or &lt;strong&gt;IMG&lt;/strong&gt;, we will stick to &lt;strong&gt;IMG&lt;/strong&gt; for this session.&lt;/p&gt;

&lt;p&gt;You can click on &lt;strong&gt;Show Availability&lt;/strong&gt; to see if the data at your specific resolution is available for your area.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/GIS/pic_GIS_nationalmap.JPG&quot; alt=&quot;national map&quot; height=&quot;80%&quot; width=&quot;80%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On the map, zoom to your area and make sure &lt;strong&gt;Current Extent&lt;/strong&gt; is hightlighted, then &lt;strong&gt;PRESS Find Products&lt;/strong&gt;, the web app will launch a search using the current extent as search parameter, and you will be presented with a list of search results.&lt;/p&gt;

&lt;p&gt;On the results list, you can click on &lt;strong&gt;Footprint&lt;/strong&gt; to see where the DEM tile is. In our case, Low Manhattan is splitted into 2 tiles, so we will need to download both tiles. Simply click on &lt;strong&gt;Download&lt;/strong&gt; for each tile and save the files to a folder of your choice.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/GIS/pic_GIS_nationalmap_footprint.JPG&quot; alt=&quot;national map&quot; height=&quot;80%&quot; width=&quot;80%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For each download there should be a &lt;strong&gt;.ZIP&lt;/strong&gt; file, and you will find many files when unzipped so unzip them into a separate folder. In the long list of files, you should see one with an extension &lt;strong&gt;.IMG&lt;/strong&gt;. If you are on Windows and do not see file extensions, please follow this link - &lt;a href=&quot;https://www.howtohaven.com/system/show-file-extensions-in-windows-explorer.shtml&quot;&gt;Show file extension.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/GIS/pic_GIS_nationalmap_savefile.JPG&quot; alt=&quot;national map&quot; height=&quot;60%&quot; width=&quot;60%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;step-2&quot;&gt;Step 2&lt;/h1&gt;
&lt;h2 id=&quot;qgis&quot;&gt;QGIS&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://qgis.org/en/site/forusers/download.html&quot;&gt;QGIS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;QGIS is an opensource GIS platform that has a very active community of developers constantly making updates and changes. It is a very powerful tool that rivals any commercial software. Download and install the current version, as of writing, the stable release is 3.4. As a suggestion, only install stable releases because you may encounter compatibility issues sometimes. We will not go through specific installation instructions, there should be plenty of online materials if you need assistance.&lt;/p&gt;

&lt;p&gt;When you are done installing the software, &lt;strong&gt;launch QGIS&lt;/strong&gt;. On the upper left corner, click &lt;strong&gt;Project &amp;gt; New&lt;/strong&gt;, you should get a blank screen as the following.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/GIS/pic_GIS_qgis.JPG&quot; alt=&quot;national map&quot; height=&quot;60%&quot; width=&quot;60%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;step-3&quot;&gt;Step 3&lt;/h1&gt;
&lt;h2 id=&quot;processing-gis-data&quot;&gt;Processing GIS Data&lt;/h2&gt;

&lt;p&gt;Almost all dataset we downloaded need to be process before they can become useful, but in this case, the processing only involve stitching the 2 tiles together, reprojecting the image to Google’s projection system, and then cropping to the specific area we want.&lt;/p&gt;

&lt;h2 id=&quot;stitching&quot;&gt;Stitching&lt;/h2&gt;

&lt;p&gt;You should have QGIS running and have a blank screen. Click &lt;strong&gt;Raster &amp;gt; Miscellaneous &amp;gt; Merge&lt;/strong&gt; and a window should pop up with a number of parameters.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/GIS/pic_GIS_qgis_merge.JPG&quot; alt=&quot;qgis&quot; height=&quot;40%&quot; width=&quot;40%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/GIS/pic_GIS_qgis_mergeparam.JPG&quot; alt=&quot;qgis&quot; height=&quot;50%&quot; width=&quot;50%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Under &lt;strong&gt;Input Layers&lt;/strong&gt;, click on the &lt;strong&gt;….&lt;/strong&gt; button and then &lt;strong&gt;Add File(s)…&lt;/strong&gt;, select the 2 &lt;strong&gt;.IMG&lt;/strong&gt; files you downloaded earlier, then click &lt;strong&gt;OK&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/GIS/pic_GIS_qgis_addfiles.JPG&quot; alt=&quot;qgis&quot; height=&quot;50%&quot; width=&quot;50%&quot; class=&quot;center-image center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Under &lt;strong&gt;Merged&lt;/strong&gt;, click on the &lt;strong&gt;….&lt;/strong&gt; button and then &lt;strong&gt;Save to File…&lt;/strong&gt;, give your file a name and choose &lt;strong&gt;TIF files (*.tif)&lt;/strong&gt; as file type, then click &lt;strong&gt;SAVE&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Make sure &lt;strong&gt;Open output file after running algorithm&lt;/strong&gt; is &lt;strong&gt;checked&lt;/strong&gt;, then click &lt;strong&gt;RUN&lt;/strong&gt;. If everything is working properly, you should see something like this on your screen.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/GIS/pic_GIS_qgis_demmerged.JPG&quot; alt=&quot;qgis&quot; height=&quot;80%&quot; width=&quot;80%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;reprojection&quot;&gt;Reprojection&lt;/h2&gt;

&lt;p&gt;All maps are 2-dimensional projections from earth’s spherical shape, and there are many projection systems used across and favored by multiple disciplines.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/GIS/earhprojections.jpg&quot; alt=&quot;qgis&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the world of GIS, projection systems are represented by a &lt;strong&gt;EPSG&lt;/strong&gt; number, and choose the right projection system is critical to our following tasks. DEMs use many different projection systems, for this 1-meter resolution data, it uses &lt;strong&gt;EPSG:26918&lt;/strong&gt; whereas the 1/9 arc-second resolution data, it uses &lt;strong&gt;EPSG:4269&lt;/strong&gt;, which is a Mercator projection that causes heavy distortions. So depends on what data source you are using, you have to be aware of the projection system it uses.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/GIS/compare-mercator-utm-wgs-projections.jpg&quot; alt=&quot;qgis&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The consequence of this is, if we want to download 3D content from Google Earth and place them onto this terrain, they will not match. The solution is to re-project this raster file to one that’s used by Google.&lt;/p&gt;

&lt;p&gt;On the left column of QGIS, Under Layer, double click on the layer named &lt;strong&gt;Merged&lt;/strong&gt;, you will see the &lt;strong&gt;Layer Properties&lt;/strong&gt; window pop up, and under the &lt;strong&gt;Information&lt;/strong&gt; tap, you should see this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/GIS/pic_GIS_qgis_layerinfo.JPG&quot; alt=&quot;qgis&quot; height=&quot;60%&quot; width=&quot;60%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CRS&lt;/strong&gt; - is the current projection system used, it should say EPSG:26918 - NAD83 with our dataset. In case you are working with other types of files and might have some other projection type, regardless, this is where you can find the information.&lt;/p&gt;

&lt;p&gt;Also take note that this is where you find the file units and pixel size, which is the most important information for us to generate 3D data down the line. Here, it says the layer is in meters and each pixel is 1x1 meter. If you are using some other projection system, this will be different. For instance, for 1/9 arc-second resolution data, the unit will be degrees and pixel size will be a very small number.&lt;/p&gt;

&lt;p&gt;Now click on &lt;strong&gt;Raster &amp;gt; Projections &amp;gt; Warp (Reproject…)&lt;/strong&gt;, a window should pop up.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/GIS/pic_GIS_qgis_warp.JPG&quot; alt=&quot;qgis&quot; height=&quot;30%&quot; width=&quot;30%&quot; class=&quot;center-image&quot; /&gt;
&lt;img src=&quot;../../assets/images/GIS/pic_GIS_qgis_warpparam.JPG&quot; alt=&quot;qgis&quot; height=&quot;50%&quot; width=&quot;50%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Set the &lt;strong&gt;Input Layer&lt;/strong&gt; to the layer we were just working with, &lt;strong&gt;Source CRS&lt;/strong&gt; to &lt;strong&gt;EPSG:4269&lt;/strong&gt;, &lt;strong&gt;Target CRS&lt;/strong&gt; to &lt;strong&gt;EPSG:900913 - Google Maps Global Mercator&lt;/strong&gt;. You can do that by clicking on the little globe icon to the right, which brings up another window. Under &lt;strong&gt;Filter&lt;/strong&gt;, just type in google and it should leave you with only 1 choice under &lt;strong&gt;Coordinate Reference System&lt;/strong&gt;, click on it and click &lt;strong&gt;OK&lt;/strong&gt; to exit.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/GIS/pic_GIS_qgis_googlecrs.JPG&quot; alt=&quot;qgis&quot; height=&quot;50%&quot; width=&quot;50%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Back in the Warp parameter window, click on the &lt;strong&gt;….&lt;/strong&gt; button under &lt;strong&gt;Reprojected&lt;/strong&gt;, give it a file name and choose &lt;strong&gt;TIF files (*.tif)&lt;/strong&gt; as file type. Click &lt;strong&gt;Save&lt;/strong&gt; and then &lt;strong&gt;Run&lt;/strong&gt;, you should have a new layer in your QGIS’ main window shortly.&lt;/p&gt;

&lt;p&gt;Once the new layer is ready, you might notice that it looks exactly the same as your previous layer. This is due to a feature in QGIS that automatically matches all the &lt;strong&gt;CRS&lt;/strong&gt;. Since the ESPG:26918 is the first layer we opened, QGIS automatically set the project to use that as default, forcing all subsequent non-matching CRS to use ESPG:26918. All we need to do now is to change the &lt;strong&gt;Project CRS&lt;/strong&gt; to the one used by the new layer. To do that, we &lt;strong&gt;Right-Click&lt;/strong&gt; on the new layer, select &lt;strong&gt;Set CRS &amp;gt; Set Project CRS from Layer&lt;/strong&gt;. Your DEM should look something like this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/GIS/pic_GIS_qgis_setcrsfromlayer.JPG&quot; alt=&quot;qgis&quot; height=&quot;40%&quot; width=&quot;40%&quot; class=&quot;center-image&quot; /&gt;
&lt;img src=&quot;../../assets/images/GIS/pic_GIS_qgis_reprojected.JPG&quot; alt=&quot;qgis&quot; height=&quot;100%&quot; width=&quot;100%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Before we move on, there is something you should double check. When we reprojected the DEM to &lt;strong&gt;Google Maps Global Mercator&lt;/strong&gt; system, your map units should change to meters and pixel size should reflect the DEM resolution you used, which in our case is 1-meter. So double-click on the layer to check the &lt;strong&gt;Information&lt;/strong&gt; tab of the &lt;strong&gt;Layer Properties&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/GIS/pic_GIS_qgis_reprounit.JPG&quot; alt=&quot;qgis&quot; height=&quot;50%&quot; width=&quot;50%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;analysis&quot;&gt;Analysis&lt;/h2&gt;
&lt;p&gt;Since the majority of the DEM file is somewhat dark, we need to change the visualization so we see the landmass features easier. But before we correct this, we should dive into this issue a little bit since it is a common problem in GIS.&lt;/p&gt;

&lt;h3 id=&quot;channel-and-bitdepth&quot;&gt;Channel and Bitdepth&lt;/h3&gt;
&lt;p&gt;First thing we need to notice is the DEM file is a single channel 32-bit file. We can talk about this in 2 parts - channels and bit depth. Single channel image usually can be seen as black and white images, or one can also use it as false color images. 3 channel images are typically RGB, representing 3 different spectrum of light information. Although for other applications such as ecological studies, you can find NRG (infrarred, red, green) used to investigate plant health. You can also have 4 channel images such as RGBA, with A being the alpha channel indicating transparency. This is a relatively simple concept to grasp.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/GIS/pic_GIS_qgis_bitdepth.JPG&quot; alt=&quot;qgis&quot; height=&quot;50%&quot; width=&quot;50%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Bitdepth on the other hand, is the amount of information each pixel is capable of storing. With 1-bit 1^2 = 2, 2-bit 2^2 = 4, 4-bit 2^4 = 16, 8-bth 2^8 = 256. In the case of this DEM file, it contains 32-bit 2^32 = 4.29 billion levels of variations. This high bit depth format is used to better approximate the terrain levels. Imagine a 2 bit file is used to store information for a terrain that goes from 0 to 80 meters, each color would represent 20 meter difference.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/GIS/pic_GIS_qgis_quantization.JPG&quot; alt=&quot;qgis&quot; height=&quot;50%&quot; width=&quot;50%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Our computer screens are mostly capable of displaying 8-bit colors, that’s 3 channels each with 8-bit, so 256 x 256 x 256 = 16.7 million color variations. But since our DEM file has only 1 channel and we are showing the image as black and white, we are restricted to only 256 levels. So what is happening is akin to jamming 32-bit space into 8-bit space, a huge amount of information would be lost.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/GIS/pic_GIS_qgis_rgbbitdepth.JPG&quot; alt=&quot;qgis&quot; height=&quot;50%&quot; width=&quot;50%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;What we can do to mitigate this situation is to remap color information to match the landmass variation. So &lt;strong&gt;Double-Click&lt;/strong&gt; on the &lt;strong&gt;Layer&lt;/strong&gt; to show the &lt;strong&gt;Layer Properties&lt;/strong&gt;. Go to &lt;strong&gt;Symbology&lt;/strong&gt;, change &lt;strong&gt;Render Type&lt;/strong&gt; to &lt;strong&gt;Singleband pseudocolor&lt;/strong&gt;, change the &lt;strong&gt;Mode&lt;/strong&gt; to &lt;strong&gt;Equal Interval&lt;/strong&gt;, click &lt;strong&gt;Apply&lt;/strong&gt; and you should see something like this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/GIS/pic_GIS_qgis_symbology01.JPG&quot; alt=&quot;qgis&quot; height=&quot;50%&quot; width=&quot;50%&quot; class=&quot;center-image&quot; /&gt;
&lt;img src=&quot;../../assets/images/GIS/pic_GIS_qgis_symbology02.JPG&quot; alt=&quot;qgis&quot; height=&quot;100%&quot; width=&quot;100%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We have just reproduced the black &amp;amp; white image with false color mapping. Notice the problem we have is due to the &lt;strong&gt;Equal Interval&lt;/strong&gt; mapping because majority of NYC is below 20 meter. Now double click on the number under &lt;strong&gt;Value&lt;/strong&gt;, change &lt;strong&gt;-17.12 to -2&lt;/strong&gt;, &lt;strong&gt;3.68 to 0&lt;/strong&gt;, &lt;strong&gt;24.48 to 10&lt;/strong&gt;, &lt;strong&gt;45.27 to 20&lt;/strong&gt;, click &lt;strong&gt;OK&lt;/strong&gt; and you should see something like this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/GIS/pic_GIS_qgis_symbology03.JPG&quot; alt=&quot;qgis&quot; height=&quot;40%&quot; width=&quot;40%&quot; class=&quot;center-image&quot; /&gt;
&lt;img src=&quot;../../assets/images/GIS/pic_GIS_qgis_symbology04.JPG&quot; alt=&quot;qgis&quot; height=&quot;80%&quot; width=&quot;80%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;What we have effectively done is to compress all the color variation to within 20 meters of elevation change. And this visualization technique can be expanded to indicate other information. Let’s say during Storm Sandy in 2012, the storm surge in NYC is at 14’. So let’s see if we can modify this visualization to show that.&lt;/p&gt;

&lt;p&gt;Back in &lt;strong&gt;Symbology&lt;/strong&gt;, click the &lt;strong&gt;Plus Sign&lt;/strong&gt; below &lt;strong&gt;Equal Interval&lt;/strong&gt; twice to add two additional values. Storm Sandy’s 14’ storm surge is about 4.2 meter, so change one of the values to 4.2 and set it to a color that would create very high contrast. Set the other newly added value to 0 representing sea level. Adjust the rest of the false color mapping to 4.3, 10, 15, 20, and 62. And now you see the high contrast color would indicate flooding areas during Sandy’s storm surge.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/GIS/pic_GIS_qgis_symbology05.JPG&quot; alt=&quot;qgis&quot; height=&quot;40%&quot; width=&quot;40%&quot; class=&quot;center-image&quot; /&gt;
&lt;img src=&quot;../../assets/images/GIS/pic_GIS_qgis_symbology06.JPG&quot; alt=&quot;qgis&quot; height=&quot;80%&quot; width=&quot;80%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;cropping&quot;&gt;Cropping&lt;/h2&gt;
&lt;p&gt;Bring up the &lt;strong&gt;Layer Properties&lt;/strong&gt; window again and take a look at the &lt;strong&gt;width and height&lt;/strong&gt;. With this file, width is about 10209 pixels and height is 20140 pixels. If we were to generate a 3D topography out of this DEM file, the mesh will have 10209 x 20104 = 205 million tesselations. This is an enormous file and will most likely crash many computers. So as a strategy, cropping the DEM file to only the areas we need should be the first step in managing the file.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/GIS/pic_GIS_qgis_layerinfo2.JPG&quot; alt=&quot;qgis&quot; height=&quot;50%&quot; width=&quot;50%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In QGIS, crop is called clip and you access the tool by clicking on &lt;strong&gt;Raster &amp;gt; Extractions &amp;gt; Clip Raster by Extent&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/GIS/pic_GIS_qgis_clipextent.JPG&quot; alt=&quot;qgis&quot; height=&quot;50%&quot; width=&quot;50%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click the &lt;strong&gt;….&lt;/strong&gt; button under &lt;strong&gt;Clipping extent (xmin, xmax, ymin, ymax)&lt;/strong&gt;, the select &lt;strong&gt;Select Extent on Canvas&lt;/strong&gt;, then &lt;strong&gt;Click - Drag&lt;/strong&gt; your mouse to select the area of interest. Then click on the &lt;strong&gt;….&lt;/strong&gt; button under &lt;strong&gt;Clipped (extent)&lt;/strong&gt; and give it a file name, choose &lt;strong&gt;TIF files (*.tif)&lt;/strong&gt; as type, click &lt;strong&gt;SAVE&lt;/strong&gt; and then &lt;strong&gt;RUN&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/GIS/pic_GIS_qgis_clipextentparam.JPG&quot; alt=&quot;qgis&quot; height=&quot;50%&quot; width=&quot;50%&quot; class=&quot;center-image&quot; /&gt;
&lt;img src=&quot;../../assets/images/GIS/pic_GIS_qgis_clipped.JPG&quot; alt=&quot;qgis&quot; height=&quot;100%&quot; width=&quot;100%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Final step before moving to Rhino3D for mesh genertaion is to export the DEM to a format that can be read easily. But before we export the file, check &lt;strong&gt;layer property&lt;/strong&gt; again to see if the width and height are within a good range. In this case, width is 1104 and height is 979 pixels. In general a good value is below 2000px x 2000px but it really depends on your hardware configuration, this number can be higher or lower.&lt;/p&gt;

&lt;h2 id=&quot;export-to-asc&quot;&gt;Export to .ASC&lt;/h2&gt;

&lt;p&gt;To bring this DEM file to Rhino3D, we will use a custom Rhino Python Parser read the file and then generate a mesh. For simplicity sake, we will use an ascii file format that can be read by Rhino Python as a simple text file. To do this, click on &lt;strong&gt;Raster &amp;gt; Conversion &amp;gt; Translate (Convert Format)&lt;/strong&gt;. Then make sure &lt;strong&gt;Input Layer&lt;/strong&gt; is pointing to the most recently created layer, and give the file a name and choose &lt;strong&gt;ASC (*.asc)&lt;/strong&gt; as file type. Click &lt;strong&gt;SAVE&lt;/strong&gt; and &lt;strong&gt;RUN&lt;/strong&gt;. When your .asc file has been created, you can open it with a text file editor and you should see something like this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/GIS/pic_GIS_qgis_convert.JPG&quot; alt=&quot;qgis&quot; height=&quot;40%&quot; width=&quot;40%&quot; class=&quot;center-image&quot; /&gt;
&lt;img src=&quot;../../assets/images/GIS/pic_GIS_qgis_convertparam.JPG&quot; alt=&quot;qgis&quot; height=&quot;50%&quot; width=&quot;50%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;ncols&lt;/span&gt;        &lt;span class=&quot;mi&quot;&gt;375&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;nrows&lt;/span&gt;        &lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;xllcorner&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;8239264.087285323068&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;yllcorner&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;4969648.230586678721&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cellsize&lt;/span&gt;     &lt;span class=&quot;mf&quot;&gt;1.322408175983&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;4.3700013160705566406&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.3799986839294433594&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.3800015449523925781&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.3899984359741210938&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.3999986648559570313&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.40000152587890625&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.4099984169006347656&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.4100012779235839844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.4199962615966796875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.3800001144409179688&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.350002288818359375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.34999847412109375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.3200025558471679688&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.2999978065490722656&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.2600064277648925781&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.2400059700012207031&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.2699961662292480469&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.2400035858154296875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.1800122261047363281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.1400046348571777344&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.1600022315979003906&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.0500097274780273438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.7900218963623046875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.4600341320037841797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.1400392055511474609&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.1099975109100341797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.0600023269653320313&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.0499999523162841797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.0099999904632568359&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9799988269805908203&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9300086498260498047&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9300012588500976563&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9399988651275634766&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9500048160552978516&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9800000190734863281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9900000095367431641&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9500086307525634766&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9699938297271728516&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9600000381469726563&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9100098609924316406&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9100024700164794922&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.880008697509765625&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9099938869476318359&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8999965190887451172&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8900012969970703125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8300120830535888672&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8599925041198730469&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8599998950958251953&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8600022792816162109&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8300046920776367188&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.80999755859375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5200328826904296875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.250030517578125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1800062656402587891&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1600000858306884766&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0700109004974365234&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9900134801864624023&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9799976348876953125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.960017085075378418&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0700097084045410156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2499890327453613281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3299877643585205078&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3000047206878662109&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2800035476684570313&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2600047588348388672&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2699854373931884766&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2499976158142089844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2100062370300292969&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1500110626220703125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1300036907196044922&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1499953269958496094&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1300024986267089844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0800096988677978516&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9900146722793579102&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.839996337890625&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.5400146245956420898&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3100316524505615234&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3000121116638183594&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3000146150588989258&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3300158977508544922&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3400244712829589844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3600023984909057617&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3400061130523681641&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0700476169586181641&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.88005125522613525391&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.65005612373352050781&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5200341343879699707&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.44002562761306762695&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.40001222491264343262&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.36002075672149658203&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.41999632120132446289&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.43999755382537841797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.42999878525733947754&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.35001343488693237305&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.3100134432315826416&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.26001587510108947754&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.28000122308731079102&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.28000488877296447754&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.40998047590255737305&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.76991450786590576172&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.2898888587951660156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.5299340486526489258&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6499669551849365234&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.5200023651123046875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3700134754180908203&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.4099841117858886719&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3900023698806762695&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.4000023603439331055&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3900060653686523438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3600085973739624023&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3400061130523681641&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3500049114227294922&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3700023889541625977&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3700109720230102539&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3500097990036010742&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3700048923492431641&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.2799901962280273438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.66005617380142211914&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.050065927207469940186&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.13995850086212158203&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.2899767756462097168&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.91994142532348632813&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3199450969696044922&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3899743556976318359&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.4399781227111816406&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.4399865865707397461&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.459986567497253418&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.450007319450378418&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.5499950647354125977&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6199914216995239258&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6299976110458374023&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6399976015090942383&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6499962806701660156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.649998784065246582&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.649998784065246582&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6599962711334228516&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.659998774528503418&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6699975728988647461&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6700011491775512695&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6799999475479125977&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6900000572204589844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.7099976539611816406&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.7200000286102294922&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.7300000190734863281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.7400000095367431641&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.7599976062774658203&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.7699999809265136719&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.7799999713897705078&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.7899999618530273438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.80999755859375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.8200000524520874023&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.8300037384033203125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.8500049114227294922&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.8500049114227294922&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.8800023794174194336&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9199975728988647461&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.959991455078125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9699939489364624023&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9599976539611816406&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.959996342658996582&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9499988555908203125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9499976634979248047&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9500000476837158203&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9600000381469726563&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9799988269805908203&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9999988079071044922&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0099999904632568359&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.029998779296875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0499975681304931641&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0699901580810546875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9800072908401489258&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.989995121955871582&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9499988555908203125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.909998774528503418&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.8300110101699829102&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.8899950981140136719&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9399951696395874023&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9200097322463989258&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0199854373931884766&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0300035476684570313&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1099901199340820313&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1199986934661865234&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1200010776519775391&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1200022697448730469&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1799879074096679688&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2399878501892089844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2499952316284179688&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2799925804138183594&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2600035667419433594&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2699987888336181641&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2700011730194091797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2700023651123046875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2800011634826660156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2900023460388183594&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3000023365020751953&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3100035190582275391&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3200047016143798828&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3300061225891113281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3500034809112548828&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3700022697448730469&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3900001049041748047&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3999989032745361328&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.4199953079223632813&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.4199965000152587891&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.4099977016448974609&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.4099965095520019531&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.4000012874603271484&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3900036811828613281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.4000012874603271484&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.4200000762939453125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.4300012588500976563&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.4400012493133544922&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.4600000381469726563&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.470001220703125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.4800012111663818359&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.4999988079071044922&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5100011825561523438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5200011730194091797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5300011634826660156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5499999523162841797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5600011348724365234&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5700011253356933594&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5899987220764160156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.6000010967254638672&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.6199998855590820313&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.6399989128112792969&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.6500012874603271484&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.6799976825714111328&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.6500110626220703125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.7699816226959228516&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.7000172138214111328&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.6600282192230224609&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.7100195884704589844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8999793529510498047&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9399926662445068359&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9500000476837158203&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9699988365173339844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.920013427734375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9299988746643066406&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8300182819366455078&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8799939155578613281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8899953365325927734&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8200023174285888672&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8199999332427978516&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.7700011730194091797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.6700122356414794922&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.6900012493133544922&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.6900074481964111328&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.7000133991241455078&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.7899937629699707031&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8299937248229980469&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8499963283538818359&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8799915313720703125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8600022792816162109&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8799953460693359375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8600060939788818359&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8800013065338134766&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9599902629852294922&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.0099914073944091797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.0399999618530273438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.0899937152862548828&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.1099998950958251953&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.1499965190887451172&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.1999976634979248047&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.2999901771545410156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.3099987506866455078&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.3299963474273681641&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.3599963188171386719&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.3999965190887451172&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.4399976730346679688&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.4400012493133544922&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.4899938106536865234&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.5599901676177978516&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.5699999332427978516&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.5799999237060546875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.6199901103973388672&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.6499927043914794922&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.6899914741516113281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.7199926376342773438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.7599914073944091797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.7899925708770751953&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.8299913406372070313&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.8699901103973388672&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.8999927043914794922&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.9399914741516113281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.9699926376342773438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.0099916458129882813&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.0399951934814453125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.0799961090087890625&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.1299953460693359375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.1799950599670410156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.2299952507019042969&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.2899937629699707031&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.3399953842163085938&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.3899950981140136719&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.4399962425231933594&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.4999938011169433594&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.54999542236328125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.5999889373779296875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.60999298095703125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.5800037384033203125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.5899977684020996094&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.6299953460693359375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.67998504638671875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.6699976921081542969&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.6700024604797363281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.6400046348571777344&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.6599936485290527344&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.7399849891662597656&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.7899913787841796875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.8199954032897949219&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.8299951553344726563&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.92998504638671875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.9499959945678710938&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.9799938201904296875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.9899973869323730469&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.999996185302734375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.9800024032592773438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.0099930763244628906&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.0199952125549316406&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.0299954414367675781&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.0299963951110839844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.0100016593933105469&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.0899906158447265625&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.2199840545654296875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.2300038337707519531&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.25&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.249996185302734375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.2499976158142089844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.2300024032592773438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.2600049972534179688&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.2999939918518066406&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.3399939537048339844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.3799953460693359375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.42999267578125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.46999359130859375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.5099940299987792969&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.54999542236328125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.5899953842163085938&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.6399927139282226563&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.6799936294555664063&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.71999359130859375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.7599954605102539063&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.8099927902221679688&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.8499937057495117188&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.8899936676025390625&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.9299936294555664063&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.9699950218200683594&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.019992828369140625&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.059993743896484375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.0999937057495117188&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.1399936676025390625&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.1799950599670410156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.2299928665161132813&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.2699937820434570313&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.309993743896484375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.3499937057495117188&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.4099903106689453125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.4299950599670410156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.4499959945678710938&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.4799938201904296875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.499996185302734375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.5299954414367675781&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.5599961280822753906&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.60999298095703125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.6499953269958496094&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.6999936103820800781&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.7499928474426269531&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.7899937629699707031&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.8299951553344726563&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.8799929618835449219&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.90999603271484375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.9699912071228027344&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;7.0199937820434570313&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;7.0699939727783203125&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;4.3799986839294433594&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.3800015449523925781&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.3899984359741210938&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.3900012969970703125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.3999986648559570313&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.4099984169006347656&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.4100012779235839844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.4199986457824707031&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.4000000953674316406&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.3400073051452636719&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.340000152587890625&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.3399987220764160156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.3100037574768066406&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.2600111961364746094&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.2700109481811523438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.2699999809265136719&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.2699985504150390625&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.2400021553039550781&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.2200045585632324219&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.1400179862976074219&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.1999974250793457031&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.0200209617614746094&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.7100367546081542969&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.4100232124328613281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.1400318145751953125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.0600132942199707031&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.0300061702728271484&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.0399975776672363281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9700171947479248047&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9400098323822021484&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9500000476837158203&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9400000572204589844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.94000244140625&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9999890327453613281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.0099964141845703125&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9800035953521728516&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9400098323822021484&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9499938488006591797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9399976730346679688&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9300036430358886719&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9200024604797363281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8900048732757568359&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8600108623504638672&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8900001049041748047&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8700072765350341797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8300108909606933594&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8599963188171386719&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8799927234649658203&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8400022983551025391&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.7700159549713134766&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5000329017639160156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2300293445587158203&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1600110530853271484&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1399989128112792969&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0700047016143798828&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0200011730194091797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9500098228454589844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0800011157989501953&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2599925994873046875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3399951457977294922&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3100047111511230469&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3100011348724365234&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.290004730224609375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2800047397613525391&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2100133895874023438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2100036144256591797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2200024127960205078&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1800074577331542969&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1400110721588134766&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1300013065338134766&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1299965381622314453&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1099987030029296875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0199975967407226563&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6600329875946044922&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.360015869140625&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3400073051452636719&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3900353908538818359&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.4200402498245239258&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.4900329113006591797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.5500328540802001953&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.400054931640625&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3700281381607055664&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.1900464296340942383&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.1100366115570068359&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.8800646662712097168&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.67007082700729370117&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.57005250453948974609&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.46004152297973632813&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.49001222848892211914&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.45000731945037841797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.43999877572059631348&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.410003662109375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.3800048828125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.37999877333641052246&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.34000611305236816406&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.31000611186027526855&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.32000488042831420898&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.37999755144119262695&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.43000245094299316406&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.89990842342376708984&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.2299255132675170898&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.4999291896820068359&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.4099767208099365234&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3299744129180908203&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3199805021286010742&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.389979243278503418&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.4299974441528320313&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.4299987554550170898&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.4000011682510375977&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3700048923492431641&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.4000011682510375977&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.4100023508071899414&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.4599902629852294922&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.4100048542022705078&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.4299767017364501953&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.1100012063980102539&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.50005370378494262695&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.019898679107427597046&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.010051267221570014954&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.52999508380889892578&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0699573755264282227&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.2699804306030273438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.2500121593475341797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3099938631057739258&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3299890756607055664&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3699841499328613281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.4999657869338989258&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6099792718887329102&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6199976205825805664&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6199988126754760742&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6299976110458374023&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6299988031387329102&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6399962902069091797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6399987936019897461&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6400011777877807617&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6499999761581420898&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6599999666213989258&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.679997563362121582&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6900000572204589844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.7000000476837158203&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.7100000381469726563&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.7299976348876953125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.7400000095367431641&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.75&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.7599999904632568359&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.7799975872039794922&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.7899999618530273438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.7999999523162841797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.8100036382675170898&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.8300049304962158203&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.8699963092803955078&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9099913835525512695&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.8999950885772705078&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9299938678741455078&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9399939775466918945&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.929997563362121582&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9299962520599365234&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9299962520599365234&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9299962520599365234&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9299987554550170898&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9300011396408081055&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9499988555908203125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9699988365173339844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9899988174438476563&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0099987983703613281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0199964046478271484&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0399963855743408203&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0499999523162841797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0100061893463134766&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.950007319450378418&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.959996342658996582&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9000085592269897461&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.860010981559753418&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.8400037288665771484&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9099853038787841797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9499914646148681641&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9799988269805908203&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9999988079071044922&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0699937343597412109&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1099925041198730469&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1199986934661865234&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1300013065338134766&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1400012969970703125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1399989128112792969&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1999878883361816406&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2199988365173339844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2499988079071044922&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2699987888336181641&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2700035572052001953&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2800035476684570313&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.290004730224609375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3000047206878662109&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.320003509521484375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3300046920776367188&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3500034809112548828&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3700022697448730469&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3899989128112792969&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.399997711181640625&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.4099965095520019531&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.4099965095520019531&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.399997711181640625&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3999965190887451172&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3900001049041748047&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3800024986267089844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3800024986267089844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.4000000953674316406&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.4100012779235839844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.4200012683868408203&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.4399988651275634766&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.4500012397766113281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.4600012302398681641&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.4799988269805908203&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.4900012016296386719&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5000011920928955078&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5100011825561523438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5299999713897705078&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5400011539459228516&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5500011444091796875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5699987411499023438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5800011157989501953&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5900011062622070313&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.6000010967254638672&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.6199998855590820313&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.6399989128112792969&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.6500012874603271484&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.6700000762939453125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.7099988460540771484&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.7399964332580566406&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.7699925899505615234&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.7600023746490478516&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8499913215637207031&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9199914932250976563&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9200024604797363281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9200074672698974609&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9599926471710205078&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9800012111663818359&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9799976348876953125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9300074577331542969&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8800134658813476563&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8799989223480224609&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8899953365325927734&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8200109004974365234&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8199987411499023438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.7300062179565429688&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.6700086593627929688&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.7199988365173339844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.7500061988830566406&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8199951648712158203&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8299987316131591797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8200023174285888672&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.839992523193359375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8399913311004638672&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8599936962127685547&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8600084781646728516&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8900024890899658203&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.910003662109375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9599976539611816406&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9899952411651611328&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.0699839591979980469&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.0899987220764160156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.1299953460693359375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.1599977016448974609&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.2299914360046386719&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.3199839591979980469&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.3100011348724365234&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.3199987411499023438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.3599951267242431641&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.4099926948547363281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.4599902629852294922&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.4500012397766113281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.4899988174438476563&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.5499925613403320313&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.5799987316131591797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.5900011062622070313&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.5800061225891113281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.6199924945831298828&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.6599915027618408203&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.6899926662445068359&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.7299914360046386719&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.7599925994873046875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.7999913692474365234&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.8299925327301025391&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.869991302490234375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.9099926948547363281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.9399964809417724609&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.9799964427947998047&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.0299954414367675781&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.0899939537048339844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.1399950981140136719&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.1899952888488769531&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.2399959564208984375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.2999939918518066406&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.3499951362609863281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.3999962806701660156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.4599938392639160156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.5099954605102539063&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.5599865913391113281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.5599951744079589844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.5599951744079589844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.5799927711486816406&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.5799975395202636719&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.6299915313720703125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.6100001335144042969&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.6399865150451660156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.6899852752685546875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.6500096321105957031&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.6300096511840820313&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.6999888420104980469&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.7699913978576660156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.809993743896484375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.8000063896179199219&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.9099888801574707031&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.9399952888488769531&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.9599962234497070313&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.9799952507019042969&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.9799962043762207031&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.9799976348876953125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.9799952507019042969&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.9899950027465820313&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.9999985694885253906&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.0000014305114746094&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.0899877548217773438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.2199778556823730469&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.2699818611145019531&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.2699975967407226563&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.2200093269348144531&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.2299976348876953125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.2300000190734863281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.2599964141845703125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.2899951934814453125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.3299951553344726563&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.3799929618835449219&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.4199938774108886719&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.4599938392639160156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.4999952316284179688&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.5499930381774902344&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.5899939537048339844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.6299939155578613281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.6699938774108886719&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.709995269775390625&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.7599930763244628906&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.7999939918518066406&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.8399939537048339844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.8799939155578613281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.9199953079223632813&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.9699926376342773438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.0099940299987792969&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.0499939918518066406&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.0899939537048339844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.1299953460693359375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.17999267578125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.21999359130859375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.2599940299987792969&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.29999542236328125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.339996337890625&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.3899912834167480469&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.4099950790405273438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.4399938583374023438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.4599962234497070313&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.4899950027465820313&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.5199952125549316406&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.5599951744079589844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.5999951362609863281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.649993896484375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.6999926567077636719&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.7399950027465820313&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.7799954414367675781&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.8299927711486816406&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.8699927330017089844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.9099950790405273438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.9599938392639160156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;7.019992828369140625&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;7.0699939727783203125&lt;/span&gt;
 &lt;span class=&quot;mf&quot;&gt;4.3799986839294433594&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.3899984359741210938&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.3900012969970703125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.3999986648559570313&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.40000152587890625&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.4099984169006347656&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.4199986457824707031&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.4199976921081542969&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.3800001144409179688&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.34000396728515625&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.3399987220764160156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.3300013542175292969&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.310001373291015625&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.3000016212463378906&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.3699865341186523438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.2700133323669433594&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.2599987983703613281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.230007171630859375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.2400045394897460938&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.2100048065185546875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.2399973869323730469&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.0100464820861816406&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.7000513076782226563&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.3000390529632568359&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.1300122737884521484&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.0899999141693115234&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.0500011444091796875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.0299975872039794922&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.0399937629699707031&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9900085926055908203&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9600036144256591797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9300036430358886719&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9599976539611816406&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9699988365173339844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9899952411651611328&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9900000095367431641&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9900035858154296875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9800035953521728516&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9100146293640136719&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.910003662109375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9499976634979248047&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9300024509429931641&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9000024795532226563&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9200012683868408203&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9200062751770019531&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9100000858306884766&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8799977302551269531&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8600022792816162109&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8400034904479980469&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8200023174285888672&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8299839496612548828&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5000269412994384766&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2000329494476318359&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1800000667572021484&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1100084781646728516&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.040008544921875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9800072908401489258&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9600121974945068359&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2199804782867431641&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3799817562103271484&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3799977302551269531&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3200132846832275391&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3200011253356933594&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3100011348724365234&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3099999427795410156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2700035572052001953&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2400097846984863281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2499976158142089844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2000074386596679688&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1899988651275634766&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1300160884857177734&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1000046730041503906&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0800046920776367188&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9099962711334228516&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.5700049400329589844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.1900391578674316406&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3799974918365478516&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.7299927473068237305&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.780029296875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.8300147056579589844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.8800170421600341797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.7000830173492431641&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.5701270103454589844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3901427984237670898&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3300671577453613281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.180058598518371582&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0400658845901489258&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.90005612373352050781&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.69008910655975341797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.62009519338607788086&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.47007080912590026855&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.42001587152481079102&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.41001343727111816406&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.38999998569488525391&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.36999145150184631348&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.34999755024909973145&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.33000001311302185059&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.36999389529228210449&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.41998898983001708984&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.49998170137405395508&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.61997067928314208984&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.94994014501571655273&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.1899280548095703125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.129974365234375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0399987697601318359&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.1499657630920410156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.2899596691131591797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.4499609470367431641&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.4200072288513183594&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3800085783004760742&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3800023794174194336&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.4399902820587158203&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.4400000572204589844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.4300011396408081055&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.4000036716461181641&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.2600342035293579102&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.80006837844848632813&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.33005860447883605957&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.29005491733551025391&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.46004152297973632813&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0099560022354125977&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.2599645853042602539&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3099803924560546875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3299878835678100586&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3199878931045532227&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.2599927186965942383&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.2799878120422363281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.3499792814254760742&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.5499401092529296875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6099426746368408203&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6099975109100341797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6199963092803955078&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.620000004768371582&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6200011968612670898&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.629999995231628418&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6499975919723510742&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6599999666213989258&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6699999570846557617&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6799999475479125977&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.6999976634979248047&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.7100000381469726563&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.7200000286102294922&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.7300000190734863281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.7499976158142089844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.7599999904632568359&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.7699999809265136719&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.7799999713897705078&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.7999999523162841797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.8100048303604125977&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.8499951362609863281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.8899902105331420898&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.8799976110458374023&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.8799962997436523438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9099950790405273438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9099950790405273438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.899998784065246582&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.8999975919723510742&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.8999975919723510742&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.899998784065246582&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9000011682510375977&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9199987649917602539&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9399988651275634766&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9599988460540771484&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9799988269805908203&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9999914169311523438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0199913978576660156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0000023841857910156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0299963951110839844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.05999755859375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0200047492980957031&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.95001220703125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.94000244140625&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9100011587142944336&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9100011587142944336&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.8500086069107055664&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.8600012063980102539&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9199926853179931641&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.9999890327453613281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0099999904632568359&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0899901390075683594&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0899987220764160156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1199877262115478516&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1499879360198974609&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1599988937377929688&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.130008697509765625&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.1599903106689453125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2299914360046386719&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2700011730194091797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.2800061702728271484&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3000047206878662109&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.320003509521484375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3400022983551025391&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3500046730041503906&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3700010776519775391&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3800001144409179688&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3999965190887451172&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.4099953174591064453&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.399997711181640625&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3899977207183837891&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3899965286254882813&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3799989223480224609&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3700010776519775391&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3700010776519775391&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3800013065338134766&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.3900012969970703125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.4000012874603271484&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.4199988842010498047&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.4300012588500976563&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.4400012493133544922&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.4500012397766113281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.4700000286102294922&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.4800012111663818359&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.4900012016296386719&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5099999904632568359&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5200011730194091797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5300011634826660156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5499987602233886719&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5600011348724365234&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5700011253356933594&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5800011157989501953&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5999999046325683594&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.6100010871887207031&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.6200010776519775391&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.6500012874603271484&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.6700000762939453125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.6899988651275634766&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.7000012397766113281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.7200000286102294922&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.7399988174438476563&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.7400097846984863281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.7700023651123046875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8699865341186523438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9200000762939453125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9400036334991455078&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9800012111663818359&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.940006256103515625&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.0099878311157226563&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9600098133087158203&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9400048255920410156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9399964809417724609&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8700144290924072266&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8599987030029296875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8399987220764160156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.809993743896484375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.6900146007537841797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.6800062656402587891&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.7599952220916748047&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8299925327301025391&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.850002288818359375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8300034999847412109&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8300011157989501953&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8000035285949707031&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.7700133323669433594&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.8300061225891113281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9299988746643066406&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9400122165679931641&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9600086212158203125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.9900000095367431641&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.980010986328125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.0199952125549316406&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.0999853610992431641&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.1299927234649658203&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.1699879169464111328&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.2299854755401611328&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.2799890041351318359&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.3099951744079589844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.3199987411499023438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.3599951267242431641&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.3999927043914794922&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.4299938678741455078&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.4499952793121337891&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.5199866294860839844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.5499901771545410156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.5999889373779296875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.6099987030029296875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.6199998855590820313&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.6000072956085205078&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.6299977302551269531&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.6599926948547363281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.6999914646148681641&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.7299926280975341797&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.7699913978576660156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.7999951839447021484&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.839996337890625&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.8899953365325927734&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.9399952888488769531&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.9899952411651611328&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.0399961471557617188&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.0999937057495117188&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.1499953269958496094&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.1999959945678710938&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.2599940299987792969&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.3099951744079589844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.3599963188171386719&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.4199938774108886719&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.4699926376342773438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.5199875831604003906&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.5000014305114746094&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.5199975967407226563&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.5199952125549316406&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.5399975776672363281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.5599961280822753906&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.6099905967712402344&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.5900015830993652344&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.560001373291015625&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.6199865341186523438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.6899876594543457031&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.6900000572204589844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.6800036430358886719&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.7699875831604003906&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.79999542236328125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.8399939537048339844&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.9299817085266113281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.9299998283386230469&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.9499974250793457031&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.9599976539611816406&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.9499974250793457031&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.959995269775390625&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.9400048255920410156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.9600014686584472656&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.9999904632568359375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.9999985694885253906&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.0100064277648925781&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.0799984931945800781&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.16999053955078125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.1700038909912109375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.2499866485595703125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.2499985694885253906&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.2200045585632324219&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.2299985885620117188&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.2599964141845703125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.2799978256225585938&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.3299927711486816406&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.3699936866760253906&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.4099936485290527344&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.4499950408935546875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.4999928474426269531&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.5399937629699707031&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.5799937248229980469&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.6199936866760253906&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.6599950790405273438&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.7099928855895996094&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.7499938011169433594&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.7899937629699707031&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.8299937248229980469&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.8699951171875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.9199929237365722656&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.9599938392639160156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.9999938011169433594&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.0399937629699707031&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.0799951553344726563&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.1299929618835449219&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.1699938774108886719&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.2099938392639160156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.2499952316284179688&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.2999930381774902344&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.3499927520751953125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.3699960708618164063&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.3899960517883300781&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.4199953079223632813&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.4499950408935546875&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.4799952507019042969&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.5099964141845703125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.559993743896484375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.5999951362609863281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.649993896484375&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.6899952888488769531&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.7399926185607910156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.7799940109252929688&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.8199939727783203125&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.8499960899353027344&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.9099926948547363281&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.9599938392639160156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;7.0199913978576660156&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;7.0699939727783203125&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;step-4&quot;&gt;Step 4&lt;/h1&gt;
&lt;h2 id=&quot;3d-mesh-generation&quot;&gt;3D Mesh Generation&lt;/h2&gt;

&lt;p&gt;This part will be conducted inside Rhino3D, so while you do not need to know anything about scripting in Rhino, we do assume you know the basic functions of Rhino to be able to continue.&lt;/p&gt;

&lt;p&gt;We are using a custom Rhino Python Script to generate the topography from the exported .asc file. First you need to launch the &lt;strong&gt;Python Script Editor&lt;/strong&gt; by clicking &lt;strong&gt;Tools &amp;gt; PythonScript &amp;gt; Edit&lt;/strong&gt;. If you are on &lt;strong&gt;OSX&lt;/strong&gt; you can just type in &lt;strong&gt;RunPythonScript&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/GIS/pic_GIS_rhinopython.JPG&quot; alt=&quot;qgis&quot; height=&quot;40%&quot; width=&quot;40%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then you need the python script, you can download here.&lt;/p&gt;

&lt;center&gt;&lt;button class=&quot;button special fit&quot;&gt;
	&lt;a href=&quot;../../assets/files/TerrainGen02.py&quot;&gt;Download Python File&lt;/a&gt;
&lt;/button&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;If you do not care to learn the specifics of the script, you can just hit &lt;strong&gt;Green Play Button&lt;/strong&gt; to execute the script, it will ask you to locate a &lt;strong&gt;.asc&lt;/strong&gt; file, load it and a topo mesh will be generated in no time.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/GIS/pic_GIS_rhinopython_window.JPG&quot; alt=&quot;qgis&quot; height=&quot;60%&quot; width=&quot;60%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you are interested in the specifics or have problem generating a mesh, read on.&lt;/p&gt;

&lt;p&gt;First, the most important thing is to make sure the header information in the .asc file is correct. The first 5 rows of data should look like this. Row 1 showing the number of columns, row 2 showing the number rows, row 3 is the lower left corner of x, row 4 is the lower left corner of y, and row 5 is the pixel size / cellsize. If your cellsize is smaller than 1, then it means the unit of your DEM layer is not in meter, which also means you did not reproject to Google Maps Mercator system. You need to go back and do that again.&lt;/p&gt;

&lt;p&gt;Also, row 6 should be the start of your actual data. If row 6 reads &lt;strong&gt;NoData Value&lt;/strong&gt; then that means during the QGIS data processing steps you clicked on something you shouldn’t have. But this mistake is relatively easy to correct, you just need to delete that line in the file.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;ncols&lt;/span&gt;        &lt;span class=&quot;mi&quot;&gt;375&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;nrows&lt;/span&gt;        &lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;xllcorner&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;8239264.087285323068&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;yllcorner&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;4969648.230586678721&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cellsize&lt;/span&gt;     &lt;span class=&quot;mf&quot;&gt;1.322408175983&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now onto explaining the python code. The first few lines are to import all the libraries, &lt;strong&gt;Math&lt;/strong&gt; is to use some trigonometric functions, &lt;strong&gt;time&lt;/strong&gt; is to calculate the amount of time it takes to generate the mesh, and &lt;strong&gt;rhinoscriptsyntax&lt;/strong&gt; is to call all the rhino functions.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;math&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;rhinoscriptsyntax&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rs&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#timer object&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;t1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The following lines uses a Rhino function &lt;strong&gt;rs.OpenFileName()&lt;/strong&gt; to open a dialog box and ask the user to locate a file restricting the extension to &lt;strong&gt;.asc&lt;/strong&gt;. Then it uses a python function &lt;strong&gt;open()&lt;/strong&gt; to open the file, then read all the content with &lt;strong&gt;readline()&lt;/strong&gt;, and then close the file.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;lines&lt;/strong&gt; variable is a &lt;a href=&quot;https://www.w3schools.com/python/python_lists.asp&quot;&gt;&lt;strong&gt;list&lt;/strong&gt;&lt;/a&gt; consisting of items, and in this case, each item is each line of text in the file.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#open and read the Arc/Grid file&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OpenFileName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Open&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Arc/Grid ASCII Files (*.asc) |*.asc||&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readlines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://www.w3schools.com/python/python_lists.asp&quot;&gt;&lt;strong&gt;lines[0]&lt;/strong&gt;&lt;/a&gt; points to the first item in the list (most programming languages begins counting with 0), it reads the whole line as a single &lt;a href=&quot;https://www.w3schools.com/python/python_strings.asp&quot;&gt;&lt;strong&gt;string&lt;/strong&gt;&lt;/a&gt; variable. Then &lt;a href=&quot;https://www.w3schools.com/python/ref_string_split.asp&quot;&gt;&lt;strong&gt;split()&lt;/strong&gt;&lt;/a&gt; separates the string into individual items. In our case, the first line contains 2 items, ncols and 375, so &lt;strong&gt;[n,ncol]&lt;/strong&gt; are the 2 variables assigned to the values being read. &lt;strong&gt;n = ncols&lt;/strong&gt; and &lt;strong&gt;ncol = 375&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Now that &lt;strong&gt;ncol&lt;/strong&gt; is assigned &lt;strong&gt;375&lt;/strong&gt;, we need to convert that to an &lt;strong&gt;integer&lt;/strong&gt; because it was read as a string value.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ncol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nrow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;ncol&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ncol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;nrow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nrow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Row 3 and 4 of the data file point to the minimum x and y locations, we do the same to assign them to 2 new variables. However, we will not be using these values because we will generate the mesh at the cartesian origin. But this information is here in case we need to use it to reference some other information.&lt;/p&gt;

&lt;p&gt;Row 5 is the cellsize in meters. dx and dy are variables assigned to the variable and then converted to a &lt;a href=&quot;https://www.programiz.com/python-programming/methods/built-in/float&quot;&gt;floating point number&lt;/a&gt;. As a side note, a shorter form can be done in a single line dx = float(cellsize) and dy = float(cellsize), but this long form is easier to understand for education reason.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xmin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ymin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cellsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;dx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cellsize&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cellsize&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;dx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next is to read the whole sequence of numbers of elevation values. In python, this is relatively simple. First declare an empty list with a square bracket named &lt;strong&gt;Z&lt;/strong&gt;, then using a for loop, &lt;strong&gt;for s in xrange(s, len(lines)):&lt;/strong&gt;, go through every &lt;strong&gt;“line”&lt;/strong&gt; in &lt;strong&gt;lines&lt;/strong&gt;, and using Python’s &lt;a href=&quot;https://www.programiz.com/python-programming/methods/list/extend&quot;&gt;&lt;strong&gt;Extend&lt;/strong&gt;&lt;/a&gt; function and combining with &lt;strong&gt;split()&lt;/strong&gt;, it turns all the numbers in each line and turn them into a legible &lt;a href=&quot;https://snakify.org/en/lessons/two_dimensional_lists_arrays/&quot;&gt;&lt;strong&gt;list of lists&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;xrange&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extend&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Last but not least, we need to assign values for X and Y. We already know the number of rows and columns and the cellsize, so by using 2 for loops we can assign proper values to the lists.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nrow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;u&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;xrange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ncol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now that we have all the x,y,z values, we are ready to generate the mesh. Since mesh generation is specific to Rhino, we need to follow Rhino’s precedure, we need to assign face vertices, vertex coordinates, and assign them to a mesh. You can find a sample &lt;a href=&quot;https://developer.rhino3d.com/samples/rhinocommon/add-mesh/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# generate face vertices&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;face&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nrow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ncol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ncol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;face&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ncol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ncol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# generate vertex coordinates&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;vertices&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;vertices&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])))&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#make mesh in rhino&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;rs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AddMesh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vertices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;face&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And that’s it!&lt;/p&gt;

&lt;div class=&quot;sketchfab-embed-wrapper&quot;&gt;&lt;iframe width=&quot;100%&quot; height=&quot;480&quot; src=&quot;https://sketchfab.com/models/a7979bace34442d1b6655c37bd348a5b/embed&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; fullscreen; vr&quot; mozallowfullscreen=&quot;true&quot; webkitallowfullscreen=&quot;true&quot;&gt;&lt;/iframe&gt;
​
&lt;p style=&quot;font-size: 13px; font-weight: normal; margin: 5px; color: #4A4A4A;&quot;&gt;
    &lt;a href=&quot;https://sketchfab.com/3d-models/world-trade-center-dem-a7979bace34442d1b6655c37bd348a5b?utm_medium=embed&amp;amp;utm_source=website&amp;amp;utm_campaign=share-popup&quot; target=&quot;_blank&quot; style=&quot;font-weight: bold; color: #1CAAD9;&quot;&gt;World Trade Center DEM&lt;/a&gt;
    by &lt;a href=&quot;https://sketchfab.com/itl?utm_medium=embed&amp;amp;utm_source=website&amp;amp;utm_campaign=share-popup&quot; target=&quot;_blank&quot; style=&quot;font-weight: bold; color: #1CAAD9;&quot;&gt;itl&lt;/a&gt;
    on &lt;a href=&quot;https://sketchfab.com?utm_medium=embed&amp;amp;utm_source=website&amp;amp;utm_campaign=share-popup&quot; target=&quot;_blank&quot; style=&quot;font-weight: bold; color: #1CAAD9;&quot;&gt;Sketchfab&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;summary&quot;&gt;Summary&lt;/h1&gt;

&lt;h3 id=&quot;what-you-have-learned&quot;&gt;What You have Learned&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;How to create and assign value to a variable&lt;/li&gt;
  &lt;li&gt;How to create and assign values a list&lt;/li&gt;
  &lt;li&gt;How to create and assign values a list of lists&lt;/li&gt;
  &lt;li&gt;How to bring data into Python as text or csv files&lt;/li&gt;
  &lt;li&gt;How to create and use a counter&lt;/li&gt;
  &lt;li&gt;How to write a basic function&lt;/li&gt;
  &lt;li&gt;How to call a basic function&lt;/li&gt;
  &lt;li&gt;Basic loop structure - how to use for-loops&lt;/li&gt;
  &lt;li&gt;How to import packages in Python&lt;/li&gt;
  &lt;li&gt;How to use basic functions of packages like Pandas, Plotly, BeautifulSoup&lt;/li&gt;
  &lt;li&gt;How to create interactive plots with Plotly.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 07 Mar 2019 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/itlworkshops/2019/GIS_Workshop_Terrain_Modeling/</link>
        <guid isPermaLink="true">http://localhost:4000/itlworkshops/2019/GIS_Workshop_Terrain_Modeling/</guid>
        
        
      </item>
    
      <item>
        <title>Data Visualization Part 2 Processing the MoMA Collection</title>
        <description>&lt;hr /&gt;

&lt;h2 id=&quot;project-description&quot;&gt;Project Description&lt;/h2&gt;
&lt;p&gt;This data visualization module is inspired by MoMA’s &lt;a href=&quot;https://github.com/MuseumofModernArt/collection&quot; target=&quot;_blank&quot;&gt;data dump&lt;/a&gt; in 2015. MoMA had release the database of their collection which contains over 130,000 pieces of artwork over the timespan of 150 years. In this session, we will learn to visualise MoMA collection similar to what &lt;a href=&quot;https://fivethirtyeight.com/features/a-nerds-guide-to-the-2229-paintings-at-moma/&quot; target=&quot;_blank&quot;&gt;Oliver Roeder&lt;/a&gt; had done at &lt;a href=&quot;https://fivethirtyeight.com/&quot; target=&quot;_blank&quot;&gt;FiveThirtyEight&lt;/a&gt;, perhaps we will even take it further. This session will allow us to dive into Pandas, Plot.ly, and python regular expression a lot more and get into some of the more intermediate level of data processing. In the course this this workshop, we will try to re-create some of Oliver’s visualizations such as these.&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;500&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; src=&quot;//plot.ly/~prattitl/66.embed&quot;&gt;&lt;/iframe&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;500&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; src=&quot;//plot.ly/~prattitl/103.embed&quot;&gt;&lt;/iframe&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;step-1&quot;&gt;Step 1&lt;/h1&gt;
&lt;h3 id=&quot;import-libraries-and-data&quot;&gt;Import Libraries and Data&lt;/h3&gt;

&lt;p&gt;This workshop module assumes you have already installed all the necessary python libraries, if you have not done so, please go back to the previous module. What we will need for this session is Plotly and Pandas, and we will run the entire session on Jupyter.&lt;/p&gt;

&lt;p&gt;First import all the libraries by executing the following code.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plotly.plotly&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plotly.graph_objs&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plotly.offline&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;download_plotlyjs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init_notebook_mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iplot&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;collections&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultdict&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;init_notebook_mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connected&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Import the csv file by executing the following code.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df_moma&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'https://github.com/MuseumofModernArt/collection/blob/master/Artworks.csv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you want to speed things up a little, download the csv file to your local drive and place it in the same folder as where you’re running Jupyter Notebook, then execute this code.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df_moma&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'./Artworks.csv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Execute &lt;strong&gt;df_moma&lt;/strong&gt; to see what’s inside this variable.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/moma/pic_moma_nan.jpg&quot; alt=&quot;NaN&quot; height=&quot;70%&quot; width=&quot;70%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Upon inspecting the data, you should see that there’re large number of records that has the value of &lt;strong&gt;NaN&lt;/strong&gt;, which in computer science lingo means &lt;strong&gt;“not a number”&lt;/strong&gt;, which also means there is an invalid record in the dataset. So before we begin to do anything beyond this, we need to for fill those records up with something else other than a &lt;strong&gt;NaN&lt;/strong&gt; because it will cause issues with Pandas and Python down the line. We use a function call &lt;strong&gt;fillna&lt;/strong&gt; to replace any &lt;strong&gt;NaN&lt;/strong&gt; value with something we desinate.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df_moma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Artist'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Nationality'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'BeginDate'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
         &lt;span class=&quot;s&quot;&gt;'Gender'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Medium'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_moma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Artist'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Nationality'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'BeginDate'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'Gender'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Medium'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fillna&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Unknown'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This line of code lets us look into each of these columns and find any &lt;strong&gt;NaN&lt;/strong&gt; values and replace them with the word &lt;strong&gt;“Unknown”&lt;/strong&gt;. We’re now ready to move forward with more advanced date processing techniques.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;step-2&quot;&gt;Step 2&lt;/h1&gt;
&lt;h3 id=&quot;data-processing&quot;&gt;Data Processing&lt;/h3&gt;

&lt;p&gt;Now that we have imported the whole 130,000 records of MoMA’s collection, say we want to see which is their largest collection, we can do something like - look at every record and see what “Medium” it uses and count them all. And finally give me a sorted result which tells me what is their biggest collection is based on the Medium.&lt;/p&gt;

&lt;p&gt;To do this we need to call a &lt;strong&gt;Function&lt;/strong&gt; that allows us to track duplicates. We have used this in previous sessions and it looks something like this. Type the following in and execute.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;list_duplicates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tally&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultdict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;tally&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;locs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;locs&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tally&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;locs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;At this point, it’s ok if you don’t know how this function works. There’re quite a bit of short form writing in there so it’s a bit harder to read than usual. For now, treat it like a blackbox or a copy / paste button where you know exactly what it does and what you need to do to call the function. For more information on Python Functions, click the following for a deep dive into the subject.&lt;/p&gt;

&lt;center&gt;&lt;button class=&quot;button special fit&quot;&gt;
		&lt;a href=&quot;https://www.w3schools.com/python/python_functions.asp&quot; target=&quot;blank&quot;&gt;Deep Dive: Python Functions&lt;/a&gt;
&lt;/button&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Now let’s call the function and have it list all the unique art media in the collection.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;medium&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dup&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;list_duplicates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_moma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Medium'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;astype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;medium&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Medium'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Number Of Artwork'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df_medium&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_records&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;medium&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;First you need to create an empty list to store all the items being found. The next line is a bit complex, it first passes the column with header &lt;strong&gt;[‘Medium’]&lt;/strong&gt; to the function while ensuring it’s passed as a &lt;strong&gt;string&lt;/strong&gt;. The function sends back with a list of lists, first listing all the unique medium names, and then the row number in which the medium name had been found. So we just need to store all that information into the &lt;strong&gt;medium&lt;/strong&gt; variable. &lt;code class=&quot;highlighter-rouge&quot;&gt;(dup[1])&lt;/code&gt; is a list of all the row numbers where the medium is found, &lt;code class=&quot;highlighter-rouge&quot;&gt;len(dup[1])&lt;/code&gt; is the &lt;strong&gt;length&lt;/strong&gt; of that list, which essentially tells me how many times that medium is found in the collection.&lt;/p&gt;

&lt;p&gt;Next we give the new list a label and create a new Pandas DataFrame for it. So now when you type in the following, you can show the dataframe and have it be sorted at the same time.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df_medium&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort_values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Number Of Artwork'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ascending&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/moma/pic_moma_mediumsortedlist.jpg&quot; alt=&quot;test image size&quot; height=&quot;70%&quot; width=&quot;70%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So now we know the largest collection MoMA has is photography and a large number of artwork have unknown media type.&lt;/p&gt;

&lt;p&gt;Now let’s say you want to look for specific &lt;strong&gt;keywords&lt;/strong&gt; in the collection that you would associate with paintings, you can do something like this.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;searchfor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'paint'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'oil'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'canvas'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Casein'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df_medium&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_medium&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Medium'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'|'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;searchfor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;center&gt;&lt;button class=&quot;button special fit&quot;&gt;
	&lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.str.contains.html&quot; target=&quot;blank&quot;&gt;Deep Dive: Pandas Str Contains&lt;/a&gt;
&lt;/button&gt;&lt;/center&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/moma/pic_moma_mediumstrcontains.jpg&quot; alt=&quot;test image size&quot; height=&quot;70%&quot; width=&quot;70%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now combine the sort function with the search function and write it all at once.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df_medium&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_medium&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Medium'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'|'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;searchfor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort_values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Number Of Artwork'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ascending&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/moma/pic_moma_mediumstrcontainssorted.jpg&quot; alt=&quot;test image size&quot; height=&quot;50%&quot; width=&quot;50%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now let’s try to use the same method of finding duplicates to see which artist has the largest number of work at MoMA.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;artists&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dup&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;list_duplicates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_moma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Artist'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;astype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;artists&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; 
                    &lt;span class=&quot;n&quot;&gt;df_moma&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Nationality'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;df_moma&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'BeginDate'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;df_moma&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'EndDate'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;df_moma&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Gender'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;df_moma&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Classification'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Artist'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Number Of Artwork'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Nationality'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'BirthYear'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'DeathYear'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Gender'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Classification'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df_artists&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_records&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;artists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df_artists&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort_values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Number Of Artwork'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ascending&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/moma/pic_moma_artistworksorted.jpg&quot; alt=&quot;test image size&quot; height=&quot;50%&quot; width=&quot;50%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We can also single out individual artist and look at the variety of work based on medium.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df_picasso&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_moma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_moma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Artist'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Pablo Picasso'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;picasso&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dup&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;list_duplicates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_picasso&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Medium'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;astype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;picasso&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Type of Work'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Number Of Artwork'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df_picassoWork&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_records&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;picasso&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df_picassowork&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort_values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Number Of Artwork'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ascending&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/moma/pic_moma_picassomediumsorted.jpg&quot; alt=&quot;test image size&quot; height=&quot;50%&quot; width=&quot;50%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So it turns out, MoMA has over one thousand pieces of art work by Picasso and almost 25% of that are litographic work!&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;step-3&quot;&gt;Step 3&lt;/h1&gt;
&lt;h3 id=&quot;date-created-vs-date-aquired&quot;&gt;Date Created VS Date Aquired&lt;/h3&gt;
&lt;p&gt;We are diving deeper and deeper into data processing with Pandas as we continue to work with the same data set. This next exercise will dive right into one of the graphs 
&lt;a href=&quot;https://fivethirtyeight.com/features/a-nerds-guide-to-the-2229-paintings-at-moma/&quot; target=&quot;_blank&quot;&gt;Oliver Roeder&lt;/a&gt; had done at &lt;a href=&quot;https://fivethirtyeight.com/&quot; target=&quot;_blank&quot;&gt;FiveThirtyEight&lt;/a&gt; in which he graphed the year in which a painting had been painted versus the year in which the painted had been acquired by MoMA. It’s a simple idea but to actually create this graph, it’s anything but simple. We will have to rely on everything we have learned so far and more!&lt;/p&gt;

&lt;p&gt;Let’s open up a new notebook start fresh, and import the following packages.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plotly.plotly&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plotly.graph_objs&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plotly.offline&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;download_plotlyjs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init_notebook_mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iplot&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;collections&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultdict&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;init_notebook_mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connected&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Import the CSV file as we did before, again, your choice if you want to load it remotely or locally.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df_moma&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'https://github.com/MuseumofModernArt/collection/blob/master/Artworks.csv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df_moma&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'./Artworks.csv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And again, let’s clean up all the missing values which is represented by &lt;strong&gt;NaN&lt;/strong&gt; and fill that with the text &lt;strong&gt;Unknown&lt;/strong&gt;. For more on how to work with &lt;strong&gt;Missing Data&lt;/strong&gt; in Pandas, click here.&lt;/p&gt;

&lt;center&gt;&lt;button class=&quot;button special fit&quot;&gt;
		&lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/user_guide/missing_data.html&quot; target=&quot;blank&quot;&gt;Deep Dive: Pandas Missing Data&lt;/a&gt;
&lt;/button&gt;&lt;/center&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df_moma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Artist'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Nationality'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Date'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'BeginDate'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Gender'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'DateAcquired'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_moma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Artist'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Nationality'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Date'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'BeginDate'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Gender'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'DateAcquired'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fillna&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Unknown'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now let’s look at the 2 column of data we’re interested in working with, DateAcquired and Date, you should see something like the following.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df_moma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'DateAcquired'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Date'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;500&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; src=&quot;https://plot.ly/~prattitl/101.embed&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Immediately we notice that the date format is diffent between the 2 columns, and even within each column, there are a lot of inconsistensies in the format. This is one of the quintessential chores in data science to search through and clear data for inconsistencies.&lt;/p&gt;

&lt;p&gt;To do that let’s talk through what the approach is, and simplify the problem by only looking at one of the columns first. The Date Acquired seems to be a bit more consistent at first glance, it seems most of the rows have this xxxx-xx-xx format. So let’s take a deeper look into this.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_moma&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DateAcquired&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;q&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'(\d{4})-(\d{1,2})-(\d{1,2})$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;500&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; src=&quot;//plot.ly/~prattitl/105.embed&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;strong&gt;df_moma.DateAcquired&lt;/strong&gt; is a short form to only show the DataAcquired column of the df_moma dataframe. It can also be written as &lt;strong&gt;df_moma[‘DateAcquired’]&lt;/strong&gt;, it’ll give us the same thing. The &lt;strong&gt;for row in x&lt;/strong&gt; loop goes into every single row of data. &lt;strong&gt;q = re.search(r’(\d{4})-(\d{1,2})-(\d{1,2})$’, row)&lt;/strong&gt; is to use a very powerful function call &lt;strong&gt;Regular Expression&lt;/strong&gt; to sift through the data looking for patterns. Regular Expression is a rabbit hole, it was invented in the 1950s as a mathematical formal language and people have built search engines and word processors with it. For a deeper understanding, I’d recommend doing a more extensive reading on this subject. For a deeper look at how to use it pragmatically with python, click the following link.&lt;/p&gt;

&lt;center&gt;&lt;button class=&quot;button special fit&quot;&gt;
		&lt;a href=&quot;https://www.dataquest.io/blog/regex-cheatsheet/&quot; target=&quot;blank&quot;&gt;Deep Dive: Regular Expression&lt;/a&gt;
&lt;/button&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;But let’s try to break it down so we have a basic understanding.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;re.search(r'(\d{4})-(\d{1,2})-(\d{1,2})$', row)&lt;/code&gt; is made up of &lt;code class=&quot;highlighter-rouge&quot;&gt;re.search(a,b)&lt;/code&gt;, which is to look for pattern a inside b. The &lt;code class=&quot;highlighter-rouge&quot;&gt;r''&lt;/code&gt; quote is a convention that defines everything within the quotes are “raw” strings. &lt;code class=&quot;highlighter-rouge&quot;&gt;\d&lt;/code&gt; is any digit between 0-9. Used along with &lt;code class=&quot;highlighter-rouge&quot;&gt;{4}&lt;/code&gt; will look for any 4 digits repeated 4 times. &lt;code class=&quot;highlighter-rouge&quot;&gt;\d{1,2}&lt;/code&gt; means look for digits repeated 1 to 2 times. So in human language, look for this pattern, digits that has been repeated 4 times, then a hyphen, then 1 to 2 digits, then another hyphen, then another 1 to 2 digits. Put this whole thing under a variable &lt;strong&gt;q&lt;/strong&gt; means, if the search is positive, return True and store that in &lt;strong&gt;q&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Thus, &lt;code class=&quot;highlighter-rouge&quot;&gt;if not q:&lt;/code&gt; means if the pattern didn’t match, then &lt;code class=&quot;highlighter-rouge&quot;&gt;print(row)&lt;/code&gt; show me the result.&lt;/p&gt;

&lt;p&gt;So from the results we see a lot of &lt;strong&gt;Unknown&lt;/strong&gt;, but unless we go through each entry one by one, we can’t be sure if that is the only deviation, so let’s add to the funciton and identify all the unique variations.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;dateAcquired_nullValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_moma&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DateAcquired&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;q&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'(\d{4})-(\d{1,2})-(\d{1,2})$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;dateAcquired_nullValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We first create an empty list and inside the loop, pass all the values that doesn’t match the pattern into the variable. So we end with a list of all the deviations. We then use a function to look for unique values.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;list_duplicates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;list_duplicates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dateAcquired_nullValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here, a &lt;strong&gt;list_duplicate&lt;/strong&gt; function is created to look for unique items. And low and behold, we get this as a result - &lt;code class=&quot;highlighter-rouge&quot;&gt;['Unknown', '1977-08', '1975-01', '1994', '1961']&lt;/code&gt;. So other than Unknown, we also have 2 other date format we have to account for.&lt;/p&gt;

&lt;p&gt;Now the &lt;strong&gt;Date&lt;/strong&gt; column seems like it’s a lot more complex. Just by scrolling through the data we can already see there is &lt;strong&gt;xxxx, xxxx-xx, c. xxxx, c. xxxx-xx, xxxx-xxxx&lt;/strong&gt;… so we will have to come up with another &lt;strong&gt;regular expression pattern&lt;/strong&gt; to sift through that data.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;date_nullValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_moma&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;q&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'^.*(\d{4}).*'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;date_nullValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For this search pattern &lt;code class=&quot;highlighter-rouge&quot;&gt;re.search(r'^.*(\d{4}).*', row)&lt;/code&gt;, we can just concentrate on this part &lt;code class=&quot;highlighter-rouge&quot;&gt;^.*(\d{4}).*&lt;/code&gt;. &lt;code class=&quot;highlighter-rouge&quot;&gt;^&lt;/code&gt; forces the search pattern right at the start of the string. &lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt; is any character and &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; is repeated however many times. So reading this together &lt;code class=&quot;highlighter-rouge&quot;&gt;^.*(\d{4})&lt;/code&gt; is it looks for a 4 digit number and ignore anything that comes before, &lt;code class=&quot;highlighter-rouge&quot;&gt;^.*(\d{4}).*&lt;/code&gt; thus, adding another &lt;code class=&quot;highlighter-rouge&quot;&gt;.*&lt;/code&gt; after that is to say, look for a 4 digit code and ignore anything that comes before and after.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;list_duplicates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;list_duplicates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date_nullValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You should see a big list of deviations that would be very hard to sift through without the use of regular expression.&lt;/p&gt;

&lt;p&gt;Now that we know the data has these many inconsistencies, let’s get rid of them. But as a general practice, we don’t necessarily want to delete records. Instead, we can create a copy of the data with a filter so we get a clean dataset. To do this we first create 2 lists that contains all the inconsistent date formats.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;dateAcquired_nullValueDup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list_duplicates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dateAcquired_nullValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;date_nullValueDup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list_duplicates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date_nullValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We’re essentially just repeating the same function earlier but now passing the results into a new variable. Then we do this.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df_moma_known&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_moma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_moma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'DateAcquired'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dateAcquired_nullValueDup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s break it down again. &lt;code class=&quot;highlighter-rouge&quot;&gt;dateAcquired_nullValueDup&lt;/code&gt; is a list of filter words. &lt;code class=&quot;highlighter-rouge&quot;&gt;df_moma['DateAcquired'].isin()&lt;/code&gt; is a way to pass the column of data and see if any of the rows is in whatever has been passed into &lt;code class=&quot;highlighter-rouge&quot;&gt;isin()&lt;/code&gt;. So essentially this will give a list of True False value showing us all the records that is in that filter list. However, we want a record that is not in the filter list, so we add that little &lt;code class=&quot;highlighter-rouge&quot;&gt;~&lt;/code&gt; tilda in front.&lt;/p&gt;

&lt;p&gt;So we have reduced the dataframe by using a list of keywords as filter. Now let’s do that again with the other list.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df_moma_known_known&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_moma_known&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_moma_known&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Date'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date_nullValueDup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now although we have cleaned up the data by eliminated all the null or unknown value records, we have yet to change the date format to something that can be used. Since we can say for sure that the year is the only consistent value between the 2 columns, we need to find a way to extract that information. We’ll do it with regular expression again.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;n&quot;&gt;datePatternToExtract&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;r'^.*(\d{4}).*'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dateAcquiredPatternToExtract&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;r'^(\d{4}).*'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df_moma_known_known&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'DateCreated'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_moma_known_known&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Date'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datePatternToExtract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df_moma_known_known&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'DateAcquiredFormtted'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_moma_known_known&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'DateAcquired'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dateAcquiredPatternToExtract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For this part, we’re using a native Pandas function &lt;strong&gt;str.extract&lt;/strong&gt; in combination with regular expression to create a new column with the proper year value. We first create 2 patterns, 1 for the Date column and the other for the Date Acquired column. The patter is very similar except for the beginning. Then we created 2 new columns and pass all the extracted values there.&lt;/p&gt;

&lt;p&gt;When you execute this, you might get an error message that reads something like this,&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trying&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;copy&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;slice&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Try&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row_indexer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;col_indexer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instead&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can ignore the message and move on. The last step in cleaning up the date format is to get rid of a single row of data that has the wrong date. The acquisition date says it’s from the 1200’s but you know that can’t be correct because the museum didn’t exist. Execute this code to get rid that specific record.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;df_moma_known_known.drop(129985, inplace=True)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Since there’re still over 120,000 records, let’s further filter the data and then do the visualization.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;medium&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dup&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;list_duplicates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_moma_known_known&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Medium'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;astype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;medium&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Medium'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Number Of Artwork'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df_medium&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_records&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;medium&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df_medium&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort_values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Number Of Artwork'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ascending&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;500&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; src=&quot;//plot.ly/~prattitl/109.embed&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;You can choose to filter the records in different ways but let’s say for now we will do it by medium. We’ll first make a list of all the medium and show its collection size. Then say we will make a few new dataframes based on medium.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df_Gelatin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_moma_known_known&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_moma_known_known&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Medium'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Gelatin silver print'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df_Lithograph&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_moma_known_known&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_moma_known_known&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Medium'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Lithograph'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df_Oil&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_moma_known_known&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_moma_known_known&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Medium'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Oil on canvas'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df_Albumen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_moma_known_known&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_moma_known_known&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Medium'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Albumen silver print'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now to create the actual graph, we’ll use a place holder variable so if you want to change to a different medium, you just need to change the first variable.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df_placeholder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_Oil&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;trace&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_placeholder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'DateAcquiredFormtted'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tolist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_placeholder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'DateCreated'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tolist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'markers'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_placeholder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Title'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tolist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;marker&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'rgba(200, 200, 200, .3)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
        &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&amp;lt;b&amp;gt;MoMA Year Acquired VS Year Created&amp;lt;/b&amp;gt;&amp;lt;br&amp;gt;'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_placeholder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Medium'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&amp;lt;br&amp;gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_placeholder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;hovermode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'closest'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;yaxis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Date Acquired'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;ticklen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;zeroline&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;gridwidth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;xaxis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Date Created'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;ticklen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;gridwidth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;showlegend&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Figure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;iplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'MoMA Year Acquired VS Year Created'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_placeholder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Medium'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;500&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; src=&quot;//plot.ly/~prattitl/103.embed&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Congratulations for completing this step. Now you’re ready to move on to the next step.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;step-4&quot;&gt;Step 4&lt;/h1&gt;
&lt;h3 id=&quot;moma-collection-by-size&quot;&gt;MoMA Collection by Size&lt;/h3&gt;

&lt;p&gt;For this exercise we will go back to what &lt;a href=&quot;https://fivethirtyeight.com/features/a-nerds-guide-to-the-2229-paintings-at-moma/&quot; target=&quot;_blank&quot;&gt;Oliver Roeder&lt;/a&gt; had done at &lt;a href=&quot;https://fivethirtyeight.com/&quot; target=&quot;_blank&quot;&gt;FiveThirtyEight&lt;/a&gt; and look at the visualization that compare the size of the artwork in the collection.&lt;/p&gt;

&lt;p&gt;Again we’ll start fresh with a new notebook and import all the libraries.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plotly.plotly&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plotly.graph_objs&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plotly.offline&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;download_plotlyjs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init_notebook_mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iplot&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;collections&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultdict&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;init_notebook_mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connected&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And we bring in the csv file.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df_moma&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'https://github.com/MuseumofModernArt/collection/blob/master/Artworks.csv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df_moma&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'./Artworks.csv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And again, let’s clean up all the missing values.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df_moma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Artist'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Nationality'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Date'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'BeginDate'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Gender'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'DateAcquired'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_moma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Artist'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Nationality'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Date'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'BeginDate'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Gender'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'DateAcquired'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fillna&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Unknown'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Remember that there’re over 130,000 records and it’s simply not feasible to visualize every single item in the collection, we will make an arbitrary decision and say the visualization will be based on their classification, and in this case, the architecture collection. You can change this to what ever you want. Say if you want to look at the sizes of all of Picasso’s work, it’s the same procedure.&lt;/p&gt;

&lt;p&gt;First look at how many classifications there are that are related to architecture. Bring in the function that looks for duplicates.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;list_duplicates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tally&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultdict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;tally&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;locs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;locs&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tally&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;locs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then call the function and have it list all the unique classifications.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;classification&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dup&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;list_duplicates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_moma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Classification'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;astype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;classification&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Classification'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Number Of Artwork'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df_classification&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_records&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classification&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df_classification&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort_values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Number Of Artwork'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ascending&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;500&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; src=&quot;//plot.ly/~prattitl/111.embed&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;From this list you can see there is a Mies van der Rohe Archive, an architecture collection, and a Frank Lloyd Wright Archive, all related to architecture. So we’ll create a new dataframe that would use those terms as filter words.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;searchfor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Mies van der Rohe Archive'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Architecture'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Frank Lloyd Wright Archive'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df_moma_archi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_moma_notNull&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_moma_notNull&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Classification'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'|'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;searchfor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Since we know we will base our on the Height and Width columns, we need to ensure we don’t have any missing data.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df_moma_archi_hasSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_moma_archi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_moma_archi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Height (cm)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isnull&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df_moma_archi_hasSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_moma_archi_hasSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_moma_archi_hasSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Width (cm)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isnull&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now the data should be ready to pass to Plotly.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df_placeholder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_moma_archi_hasSize&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;hovertext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_placeholder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iterrows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;hovertext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Artist'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&amp;lt;br&amp;gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'DateAcquired'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&amp;lt;br&amp;gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Title'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;trace&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_placeholder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Height (cm)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tolist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_placeholder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Width (cm)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tolist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'markers'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hovertext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&amp;lt;b&amp;gt;MoMA Drawing Size&amp;lt;/b&amp;gt;&amp;lt;br&amp;gt;'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&amp;lt;br&amp;gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_placeholder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;hovermode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'closest'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;yaxis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Height (cm)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;ticklen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;zeroline&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;gridwidth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;xaxis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Width (cm)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;ticklen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;gridwidth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;showlegend&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;paper_bgcolor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'rgba(0,0,0,0)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;plot_bgcolor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'rgba(0,0,0,0)'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Figure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'MoMA Drawing Size scattered'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;500&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; src=&quot;//plot.ly/~prattitl/70.embed&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Now let’s not stop here because we only got a scatter plot, but we want to actually see the rectangles. To have plotly draw shapes, we’ll need to learn about the syntax. For a deep dive into Plot.ly shapes, click here.&lt;/p&gt;

&lt;center&gt;&lt;button class=&quot;button special fit&quot;&gt;
		&lt;a href=&quot;https://plot.ly/python/shapes/&quot; target=&quot;blank&quot;&gt;Deep Dive: Plot.ly Shapes&lt;/a&gt;
&lt;/button&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Essentially we learn that shapes are drawn in the layout section rather than in the data section. And shapes are drawn as a dictionary like this. Dictionary is a type of data structure in Python. For a deep dive on the subject, click here.&lt;/p&gt;

&lt;center&gt;&lt;button class=&quot;button special fit&quot;&gt;
		&lt;a href=&quot;https://www.w3schools.com/python/python_dictionaries.asp&quot; target=&quot;blank&quot;&gt;Deep Dive: Python Dictionary&lt;/a&gt;
&lt;/button&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;'shapes'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# unfilled Rectangle&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'type'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'rect'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'x0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'y0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'x1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'y1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'line'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;'color'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'rgba(128, 0, 128, 1)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# filled Rectangle&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'type'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'rect'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'x0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'y0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'x1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'y1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'line'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;'color'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'rgba(128, 0, 128, 1)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;'width'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'fillcolor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'rgba(128, 0, 128, 0.7)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So now we need to figure a way to create this dictionary. We know the shape dictionary has few parameters: type, x0, y0, x1, y1, line, and fillcolor. We know what the type should be, we know all of rectangles should start at (0,0), we know what line and fillcolor should be, so all we need is to pass the (x1,y1) location to this. In Python, we can create a dictionary like this.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'type'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'xref'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'yref'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'x0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'y0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'x1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'y1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'line'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'fillcolor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'rect'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'x'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'y'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'color'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'rgb(55,55,55)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'width'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,},&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'rgba(55,55,55,0.5)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And if we pass that variable to a plot we can get a single rectangle.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;trace0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Rectangle reference to the plot'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;'Rectangle reference to the axes'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'text'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trace0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'xaxis'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'range'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'showgrid'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'yaxis'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'range'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'shapes'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'layout'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;iplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'shapes-rectangle-ref'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So all we need to do is to create a list of dictionaries that will cycle through all the Height and Width data in the records and pass them to the dictionary.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;rects&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_placeholder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iterrows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'type'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'xref'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'yref'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'x0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'y0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'x1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'y1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'line'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'fillcolor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'rect'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'x'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'y'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Width (cm)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Height (cm)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'color'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'rgb(200,200,200)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'width'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,},&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;'rgba(55,55,55,0.1)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;rects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once that’s done, you can create the graph again with this new variable.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df_placeholder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_moma_archi_hasSize&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;hovertext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;rects&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_placeholder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iterrows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;hovertext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Artist'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&amp;lt;br&amp;gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'DateAcquired'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&amp;lt;br&amp;gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Title'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'type'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'xref'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'yref'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'x0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'y0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'x1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'y1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'line'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'fillcolor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'rect'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'x'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'y'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Width (cm)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Height (cm)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'color'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'rgb(200,200,200)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'width'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,},&lt;/span&gt;
              &lt;span class=&quot;s&quot;&gt;'rgba(55,55,55,0.1)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;rects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;trace&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_placeholder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Height (cm)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tolist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_placeholder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Width (cm)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tolist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'markers'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hovertext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;marker&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'rgba(255, 0, 0, .3)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
        &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'MoMA Drawing Size&amp;lt;br&amp;gt;'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&amp;lt;br&amp;gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_placeholder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;hovermode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'closest'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;yaxis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Height (cm)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;ticklen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;zeroline&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;gridwidth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;xaxis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Width (cm)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;ticklen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;gridwidth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;shapes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rects&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;showlegend&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;paper_bgcolor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'rgba(0,0,0,0)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;plot_bgcolor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'rgba(0,0,0,0)'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Figure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'MoMA Drawing Size'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;500&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; src=&quot;//plot.ly/~prattitl/66.embed&quot;&gt;&lt;/iframe&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;summary&quot;&gt;Summary&lt;/h1&gt;

&lt;h3 id=&quot;what-you-have-learned&quot;&gt;What You have Learned&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;How to create and assign value to a variable&lt;/li&gt;
  &lt;li&gt;How to create and assign values a list&lt;/li&gt;
  &lt;li&gt;How to create and assign values a list of lists&lt;/li&gt;
  &lt;li&gt;How to bring data into Python as text or csv files&lt;/li&gt;
  &lt;li&gt;How to create and use a counter&lt;/li&gt;
  &lt;li&gt;How to write a basic function&lt;/li&gt;
  &lt;li&gt;How to call a basic function&lt;/li&gt;
  &lt;li&gt;Basic loop structure - how to use for-loops&lt;/li&gt;
  &lt;li&gt;How to import packages in Python&lt;/li&gt;
  &lt;li&gt;How to use basic functions of packages like Pandas, Plotly, BeautifulSoup&lt;/li&gt;
  &lt;li&gt;How to create interactive plots with Plotly.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 19 Feb 2019 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/itlworkshops/2019/DataViz02/</link>
        <guid isPermaLink="true">http://localhost:4000/itlworkshops/2019/DataViz02/</guid>
        
        
      </item>
    
      <item>
        <title>Data Visualization Part 1 Webscraping and Visualization</title>
        <description>&lt;hr /&gt;

&lt;h2 id=&quot;project-description&quot;&gt;Project Description&lt;/h2&gt;
&lt;p&gt;In this workshop session you will learn to do a scrape data off an html doc, process the data by extracting all the data and eliminating all the html tags, and then do a fairly straight forward visualization. By the end of this session, you will learn to do something like this.&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;500&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; src=&quot;//plot.ly/~tngai/86.embed&quot;&gt;&lt;/iframe&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;step-1&quot;&gt;Step 1&lt;/h1&gt;
&lt;h3 id=&quot;webscraping--dataprocessing&quot;&gt;Webscraping &amp;amp; Dataprocessing&lt;/h3&gt;
&lt;p&gt;Webscraping is a very powerful tool for data visualization especially if you’re interested in culturo-socio-polico-economic issues. This tool allows you to tap into vast amount of data from sometimes not so data friendly sources. In this example, we will look at salay levels of people who work in the New York Public Education System. By deploying the Freedom of Information Act, some organizations have requested and released data such as salary levels of all public employees across the country. This is an invaluable tool to demand accountability for people holding public offices. However, these dataset do not always come in a format that is easy to visualize. In our case, we will dive into a typical use case scenario and use the data released by the &lt;a href=&quot;https://www.seethroughny.net/&quot; target=&quot;_blank&quot;&gt;Empire Center&lt;/a&gt;, and look at salary levels of employees working in the CUNY system.&lt;/p&gt;

&lt;p&gt;To start, the data cannot be downloaded with the click of a button. The data is not stored in any of the contemporary data formats like xml, json, or even csv. So to get the data, we’ll need to do some detective work and see how we can collect the information we want. First visit this website, &lt;a href=&quot;https://www.seethroughny.net/&quot; target=&quot;_blank&quot;&gt;seethroughny.net&lt;/a&gt;. Go to Menu &amp;gt; Payrolls &amp;gt; Schools, then under &lt;strong&gt;Filter &amp;gt; Employer / Agency&lt;/strong&gt;, type in &lt;strong&gt;Fashion Institute of Technology&lt;/strong&gt;. You can use the button below to directly link to the data, the actual data file is provided for you  as well.&lt;/p&gt;

&lt;p&gt;For direct link:&lt;/p&gt;
&lt;center&gt;&lt;button class=&quot;button&quot;&gt;
	&lt;a href=&quot;https://www.seethroughny.net/payrolls/107209525&quot; target=&quot;_blank&quot;&gt;FIT Payroll&lt;/a&gt;
&lt;/button&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;For data files:&lt;/p&gt;
&lt;center&gt;&lt;button class=&quot;button&quot;&gt;
	&lt;a href=&quot;../../../assets/files/SalaryScrape.zip&quot;&gt;Download Data File&lt;/a&gt;
&lt;/button&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;We will cover how to use python to access web pages and webscrape with code at a different exercise. For now, I have already prepared and downloaded part of the html data for you so we can jump into data processing and visualization immediately.&lt;/p&gt;

&lt;p&gt;If you have not done so already, download, unzip, and move the data file and place them into a new folder, I just created a folder named dataviz on my desktop. Then 
&lt;strong&gt;Launch Juputer Notebook&lt;/strong&gt; by opening a &lt;a href=&quot;https://www.macworld.co.uk/how-to/mac-software/how-use-terminal-on-mac-3608274/&quot; target=&quot;_blank&quot;&gt;Terminal&lt;/a&gt; or &lt;a href=&quot;https://docs.anaconda.com/anaconda/user-guide/getting-started/&quot; target=&quot;_blank&quot;&gt;Anaconda Prompt&lt;/a&gt;, and type &lt;strong&gt;CD&lt;/strong&gt;  for “change directory”, and type in the path of the folder where your data file is stored.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tedngai&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Desktop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataviz&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then launch Jupyter Notebook by typing this, it will launch your web browser and should open the web app, and you should see Jupyter and your current folder location.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;jupyter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;notebook&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In Jupyter Notebook, click in the space at the first line right next to &lt;strong&gt;In [1]&lt;/strong&gt;, and type the following, once it’s done  &lt;strong&gt;Hold SHIFT then press ENTER&lt;/strong&gt; to execute the code.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;bs4&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;codecs&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/pic_jupyter_firstline.jpg&quot; alt=&quot;jupyter first&quot; height=&quot;50%&quot; width=&quot;50%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Python is a very powerful programming language due to the fact that it has a large community of developers writing libraries to handle lower level programming, allowing you to concentrate on the big ideas.&lt;/p&gt;

&lt;p&gt;There’re many libraries and packages out there that will handle different types of  issues. And when ever you install libraries or packages from the opensource community, you will need to &lt;strong&gt;“import”&lt;/strong&gt; them into the current system. And that’s what these first 3 lines of code is doing.&lt;/p&gt;

&lt;p&gt;Next we will need to load the data file. Do that by typing the following and &lt;strong&gt;Hold SHIFT then press ENTER&lt;/strong&gt; again to execute the code.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;codecs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;./FIT_salaryscrape.txt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;r&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What this line of code is doing is to store the whole text file into a single variable &lt;strong&gt;f&lt;/strong&gt;. The &lt;strong&gt;“r”&lt;/strong&gt; is to tell python that this is &lt;strong&gt;read-only&lt;/strong&gt;. As mentioned before, this text file is basically a copy-paste html code from the webpage. What this means is it contains a lot of html code that needs to be processed. If you are not familiar with HTML code, look here for deep-dive into html code format and structure.&lt;/p&gt;

&lt;center&gt;&lt;button class=&quot;button&quot;&gt;
		&lt;a href=&quot;https://www.w3schools.com/html/html_examples.asp&quot; target=&quot;blank&quot;&gt;Deep Dive: HTML&lt;/a&gt;
&lt;/button&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;What we want to do is to separate html codes from data. Luckily the python library BeautifulSoup is built to do just that. Type in the following code and &lt;strong&gt;Hold SHIFT then press ENTER&lt;/strong&gt; to execute.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;rows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'tr'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[::&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cols&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'td'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cols&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ele&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ele&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cols&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ele&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ele&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cols&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ele&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/pic_jupyter_load_data.jpg&quot; alt=&quot;jupyter load data&quot; height=&quot;50%&quot; width=&quot;50%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The first line of code here is to create an &lt;strong&gt;Empty List&lt;/strong&gt; named data. Think of it as a bucket that can hold any length of data, and you need to declare it so python knows it before hand. In python, this is one of the very few data types that needs to be declared first. Second line is to call on BeautifulSoup to read the text file and in turn, assign that to the variable &lt;strong&gt;soup&lt;/strong&gt;. In the next line, try typing in &lt;strong&gt;soup&lt;/strong&gt; in the next line and execute it, you should see the HTML content. By looking at the html code, we can see that the data begins with a row of data that has an ID named resultRow, and the next row has an ID named exapndRow. resultRow has the information we need but expandRow contains mostly junk. This provide crucial information for how the data is structured and that it has a repetitive pattern.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/pic_jupyter_soup.jpg&quot; alt=&quot;jupyter soup&quot; height=&quot;50%&quot; width=&quot;50%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;HTML is basically a big mix of human readable language mixed with machine language, allowing for both human and machine to access the same information. Most of the machine language is contained within this &amp;lt;&amp;gt; bracket call &lt;strong&gt;Tags&lt;/strong&gt;. There’re lots of common HTML tags, and the one that we see here is &lt;strong&gt;tr&lt;/strong&gt; and &lt;strong&gt;td&lt;/strong&gt;. &lt;strong&gt;tr&lt;/strong&gt; represents &lt;strong&gt;Table / Row&lt;/strong&gt;, and &lt;strong&gt;td&lt;/strong&gt; represents &lt;strong&gt;Table / Data cell&lt;/strong&gt;. Each row of data begins with the tag &lt;strong&gt;tr&lt;/strong&gt; and end with the &lt;strong&gt;/tr&lt;/strong&gt; tag. All the content contained inside a pair of &lt;strong&gt;tr&lt;/strong&gt; tags is considered to be in the same row, like a row of data in an excel spreadsheet. As we can see here, there’re a bunch of &lt;strong&gt;td&lt;/strong&gt; tags within the &lt;strong&gt;tr&lt;/strong&gt; tags, a bunch of data cells inside a row. So if we look at the python code, BeautifulSoup is used to read the whole HTML text file, and then the function &lt;strong&gt;find_all&lt;/strong&gt; is used to locate all the &lt;strong&gt;tr&lt;/strong&gt; tags and they’re collected in a variable all &lt;strong&gt;ROWS&lt;/strong&gt;. &lt;strong&gt;find_all&lt;/strong&gt; creates a &lt;strong&gt;list of lists&lt;/strong&gt; where each row of data is stored as an item in the list. For more information on lists, follow the link for a deep dive.&lt;/p&gt;

&lt;center&gt;&lt;button class=&quot;button&quot;&gt;
		&lt;a href=&quot;http://openbookproject.net/thinkcs/python/english3e/lists.html&quot; target=&quot;blank&quot;&gt;Deep Dive: List of Lists&lt;/a&gt;
&lt;/button&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;This following bit of code is about applying a programming logic to go through each row of data, then apply the same procedure repeatedly until some condition is met, and we will end up with a programming friendly dataset. &lt;strong&gt;for row in rows&lt;/strong&gt; is a simple way that python goes through every single item in a big list of things and pick through each item. &lt;strong&gt;[::2]&lt;/strong&gt; is python’s way to skip every other item, as we need to do here because every other row of html content is non-essential. For a deep-dive into python loop structures, click the following.&lt;/p&gt;

&lt;center&gt;&lt;button class=&quot;button&quot;&gt;
	&lt;a href=&quot;https://wiki.python.org/moin/ForLoop&quot; target=&quot;blank&quot;&gt;Deep Dive: For Loop&lt;/a&gt;
&lt;/button&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Now that we’re inside the &lt;strong&gt;for loop&lt;/strong&gt;, we’ll identify all the &lt;strong&gt;td&lt;/strong&gt; tags and then sort them into another list with the &lt;strong&gt;find_all&lt;/strong&gt; function again. We then use the  &lt;strong&gt;text.strip()&lt;/strong&gt; function to get rid of all the machine language or tags so all that remains is human readable language.&lt;/p&gt;

&lt;p&gt;Last but not least, the last line puts each row of data that has been processed into a variable, something I called a bucket earlier. You can see what the variable data looks like if you just execute the variable data. Type &lt;strong&gt;data&lt;/strong&gt; and execute and you should see something like this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/pic_jupyter_data.jpg&quot; alt=&quot;jupyter soup&quot; height=&quot;50%&quot; width=&quot;50%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As you can see, this data structure is a &lt;strong&gt;list of lists&lt;/strong&gt;. It’s a list of every person with Names, School Affiliation, Salary Level, and NYSTRS Description, inside a list of all 377 people. Now it’s time to turn this list of lists into a Pandas dataframe to make visualization much easier. Think of Pandas as a very powerful Excel that can handle lists and tables very well. To do this we need to just give the data a &lt;strong&gt;HEADER&lt;/strong&gt;, and then call a function to create a new variable. Execute the following code and then type &lt;strong&gt;df&lt;/strong&gt; to show the variable.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'NAME'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'SCHOOL'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'SALARY'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'TYPE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_records&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/pic_jupyter_df.jpg&quot; alt=&quot;jupyter soup&quot; height=&quot;50%&quot; width=&quot;50%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now that you have turned an ordinary &lt;strong&gt;list of lists&lt;/strong&gt; into a Pandas &lt;strong&gt;Dataframe&lt;/strong&gt;, we will be able to use many of its powerful features to further process the data.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;step-2&quot;&gt;Step 2&lt;/h1&gt;
&lt;h3 id=&quot;data-visualizaiton&quot;&gt;Data Visualizaiton&lt;/h3&gt;
&lt;p&gt;We’re now ready to visualize the data. The table we have only has 4 columns of data,  2 of which repeats the same information over and over. So essentially, we only have &lt;strong&gt;names&lt;/strong&gt; and &lt;strong&gt;salary&lt;/strong&gt; to work with. For something like this, we can do a &lt;a href=&quot;https://plot.ly/python/box-plots/&quot;&gt;Box Plot&lt;/a&gt; that allow us to look at a 1-Dimensional data in an interesting way. For more graph types you can do with Plot.ly, click the following link.&lt;/p&gt;

&lt;center&gt;&lt;button class=&quot;button&quot;&gt;
	&lt;a href=&quot;https://plot.ly/python/&quot; target=&quot;blank&quot;&gt;Deep Dive: Plot.ly Graphs&lt;/a&gt;
&lt;/button&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;For this next part we’ll need to bring in another python package. Plotly is a dynamic graphing package that lets you interact with data live. We will look at the basics of how to use it to graph what we have. So first import the packages by typing in the following.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plotly.plotly&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plotly.graph_objs&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plotly.offline&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;download_plotlyjs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init_notebook_mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iplot&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;init_notebook_mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connected&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The first 3 lines of code is just to import the Plotly graphing packages. The 4th one is to allow plotly to plot directly inside Jupyter. Once you have executed the code, you can go ahead and input the following code.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;trace0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;FIT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SALARY'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;FIT Faculty Salary&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trace0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;iplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;s&quot;&gt;&quot;layout&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If everything is running correctly, you should see a graph like this one. This is a 1 dimensional graph that gives you a bit of statistical calculation. It tells you what the median value is, what the lower and upper fence is, and what numbers are falling outside of the norm. How going back to the code, &lt;strong&gt;trace0&lt;/strong&gt; is defined to use Box graph and you assign the Y axis to only the &lt;strong&gt;SALARY&lt;/strong&gt; column of the dataframe. For layout, we’re naming the graph FIT Faculty Salary. Data is needed to put trace0 in a square bracket. This step is necessary because if we want to plot more than 1 column of data, we can put multiple values here. Lastly, the iplot command sends the plot to jupyter.&lt;/p&gt;

&lt;center&gt;&lt;iframe width=&quot;400&quot; height=&quot;500&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; src=&quot;//plot.ly/~tngai/78.embed&quot;&gt;&lt;/iframe&gt;&lt;/center&gt;

&lt;p&gt;You can download the jupyter file here and review the all the inputs here.&lt;/p&gt;

&lt;center&gt;&lt;button class=&quot;button&quot;&gt;
	&lt;a href=&quot;../../assets/files/FIT_bs4.ipynb&quot;&gt;Download Data File&lt;/a&gt;
&lt;/button&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;alternate-visualizaiton&quot;&gt;Alternate Visualizaiton&lt;/h3&gt;
&lt;p&gt;Although this visualization is very straightforward, you can improve it by showing the points data to understand the distribution a little better. To do this you just need to add 3 lines of code: &lt;code class=&quot;highlighter-rouge&quot;&gt;boxpoints='all'&lt;/code&gt; to show all the points, &lt;code class=&quot;highlighter-rouge&quot;&gt;jitter&lt;/code&gt; is to “spread” the points to a certain width, and &lt;code class=&quot;highlighter-rouge&quot;&gt;pointpos&lt;/code&gt; is to move the position so it doesn’t overlap with the box itself.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;boxpoints&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'all'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;jitter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;pointpos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.5&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;All together it would look something like this.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;trace0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;FIT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SALARY'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;boxpoints&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'all'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;jitter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;pointpos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;FIT Faculty Salary&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trace0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;iplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;s&quot;&gt;&quot;layout&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;center&gt;&lt;iframe width=&quot;50%&quot; height=&quot;500&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; src=&quot;//plot.ly/~tngai/82.embed&quot;&gt;&lt;/iframe&gt;&lt;/center&gt;

&lt;h1 id=&quot;step-3&quot;&gt;Step 3&lt;/h1&gt;
&lt;p&gt;###Data Visualizaiton Challenge
Let’s try to apply everything we’ve learn so far and apply it to a more challenging dataset. For this exercise, you will have to learn a few more Pandas commands on data processing. We will use the &lt;strong&gt;CUNY_salaryscrape.txt&lt;/strong&gt; file that was downloaded earlier, here’s the link again.&lt;/p&gt;

&lt;center&gt;&lt;button class=&quot;button&quot;&gt;
	&lt;a href=&quot;../../../assets/files/SalaryScrape.zip&quot;&gt;Download Data File&lt;/a&gt;
&lt;/button&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Now before we begin this final challenge, let’s take a look at the file and try to understand what kind of strategy we need to unpack this. First, the text file itself is almost 50Mb, for a text file this is pretty big, which means we have to be a careful about memory management. And upon opening the file, you’ll find that there’re over 12 million lines of text inside. Although not all the lines are useful data, we’ll need to devise a way to efficiently extract only the useful information out.&lt;/p&gt;

&lt;p&gt;Now let’s open up the file and look at the first 2 rows of data under the &lt;strong&gt;tr&lt;/strong&gt; tag and try to see what we’re dealing with. The file opens with an html tag &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt; followed by 1 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; tag and a bunch of &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;td&amp;gt;&lt;/code&gt; tags. This part of the file is exactly the same as the previous exercie. The &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; tags have 2 different &lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt; types: 1 is the &lt;strong&gt;&lt;em&gt;resultRow&lt;/em&gt;&lt;/strong&gt; and the other is the &lt;strong&gt;&lt;em&gt;expandRow&lt;/em&gt;&lt;/strong&gt;, with &lt;strong&gt;&lt;em&gt;resultRow&lt;/em&gt;&lt;/strong&gt; showing the basic information and &lt;strong&gt;&lt;em&gt;expandRow&lt;/em&gt;&lt;/strong&gt; showing supplemental information. Unlike the previous example, we can’t just simply discard the expandRow, this means we will have to accomodate that with our code.&lt;/p&gt;

&lt;p&gt;Also, the first row of data is separated into columns with the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;td&amp;gt;&lt;/code&gt; tags whereas the second row is tag is separated &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;div&amp;gt;&lt;/code&gt; tags. So the 2 rows of data will have to be parsed differently.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;tbody&amp;gt;&amp;lt;tr&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;resultRow88275159&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onclick=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stnyResultTable.toggleRow(88275159); return false;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;i&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;glyphicon glyphicon-minus&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;El Mohandes, Ayman&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;CUNY&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;$544,685&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;visible-sm visible-md visible-lg&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;School of Public Health Lag&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;expandRow88275159&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;&lt;span class=&quot;ni&quot;&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;colspan=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;5&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;row visible-xs-block&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-xs-4&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;strong&amp;gt;&lt;/span&gt;SubAgency/Type&lt;span class=&quot;nt&quot;&gt;&amp;lt;/strong&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-xs-6&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;School of Public Health Lag&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-xs-4&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;strong&amp;gt;&lt;/span&gt;Title&lt;span class=&quot;nt&quot;&gt;&amp;lt;/strong&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-xs-6&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Dean School Of Public Health&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-xs-4&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;strong&amp;gt;&lt;/span&gt;Rate of Pay&lt;span class=&quot;nt&quot;&gt;&amp;lt;/strong&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-xs-6&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;$443,000&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-xs-4&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;strong&amp;gt;&lt;/span&gt;Pay Year&lt;span class=&quot;nt&quot;&gt;&amp;lt;/strong&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-xs-6&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;2018&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-xs-4&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;strong&amp;gt;&lt;/span&gt;Pay Basis&lt;span class=&quot;nt&quot;&gt;&amp;lt;/strong&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-xs-6&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Annual&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;row&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-xs-4&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;strong&amp;gt;&lt;/span&gt;Branch/Major Category&lt;span class=&quot;nt&quot;&gt;&amp;lt;/strong&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;col-xs-6&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;State - Executive&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ok so let’s just dive right into this. First, again, import all the packages we need by executing the following code.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;bs4&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;collections&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultdict&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plotly.plotly&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plotly.graph_objs&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plotly.offline&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;download_plotlyjs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init_notebook_mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iplot&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;codecs&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;init_notebook_mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connected&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next, read the data file and use BeautifulSoup to sort all the rows of data into a list of lists.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;codecs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;./CUNY_salaryscrape.txt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;r&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;rows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'tr'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Same as before, the following code is to go through each row of data and extract all the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;td&amp;gt;&lt;/code&gt; tags and put them in the right place. However, as mentioned before, the data is structured differently this time, so all the extra code here is to deal with the alternating rows and the different data tags used.&lt;/p&gt;

&lt;p&gt;Not to get too much into the technical detail, but the idea is to use 2 buckets, 1 to hold data for very 2 rows of data, which will then be dumped into the other bucket, and then empty itself out. So this is a way to get around the quirkiness data structure that was provided.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;flatten&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sublist&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sublist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cols&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'td'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cols&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ele&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ele&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cols&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cols&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;templist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;templist&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;flattemp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flatten&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ele&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ele&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flattemp&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ele&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now that we have a list of lists with all the useful data in it, it’s time to turn them into a Pandas dataframe for further processing.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'NAME'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'SCHOOL'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'SALARY'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'DEPARTMENT'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'SUBAGENCY TYPE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SUBAGENCY'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'TITLE TYPE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'TITLE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'RATEOFPAY TYPE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'RATE OF PAY'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'PAYYEAR TYPE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'PAY YEAR'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'PAYBASIS TYPE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'PAY BASIS'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'BRANCH TYPE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'BRANCH'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_records&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Since the 2nd row of data contains a lot of “junk” data we will need to eliminate some of the columns of data that was just created. We’re doing it this way instead of parsing it out during the input phase because it’s a lot easier to remove columns with Pandas than to use logic to filter out unwanted data.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SUBAGENCY TYPE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'TITLE TYPE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'RATEOFPAY TYPE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SUBAGENCY'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'PAYYEAR TYPE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'PAY YEAR'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'PAYBASIS TYPE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'BRANCH TYPE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'BRANCH'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If everything is going smoothly up to this point, you should see something like this when you type in &lt;code class=&quot;highlighter-rouge&quot;&gt;df&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/pic_CC_df.jpg&quot; alt=&quot;&quot; height=&quot;50%&quot; width=&quot;50%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now that we have the whole dataset with 34,000 rows of data, we can see we have actually more than 1 dimension to work with. So for this exercise, let’s filter the amount of data down. If you see the &lt;strong&gt;DEPARTMENT&lt;/strong&gt; column, this dataset includes employees in the whole &lt;strong&gt;CUNY&lt;/strong&gt; system. So let’s starts with singling out a specific college and concentrate on that. In our case, we’ll only look at people who work at the &lt;strong&gt;City College&lt;/strong&gt;. To do this we need to figure out how many different &lt;strong&gt;DEPARTMENTS&lt;/strong&gt; there are. You can do this in many different ways but a powerful and pythonic way is to write a function. This following is an example to list all the duplicates and in which record the duplicate appears. For now, we’re not going to go into the details so we’ll just assume this is a button in a computer software you can press and it’ll get you what you need.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;list_duplicates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tally&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultdict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;tally&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;locs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;locs&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tally&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;locs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now that the function to find duplicate is in place, we can call the function with the following code. Essentially we’re setting an empty bucket called departments, and all the variations will be collected into that variable. And if you execute the code successfully, you should see something like the following.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;departments&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dup&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;list_duplicates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'DEPARTMENT'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;departments&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/pic_jupyter_CC_departments.jpg&quot; alt=&quot;&quot; height=&quot;50%&quot; width=&quot;50%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As you can see, &lt;strong&gt;City College&lt;/strong&gt; is named in different ways like &lt;strong&gt;City College&lt;/strong&gt;, &lt;strong&gt;City College Adjunct&lt;/strong&gt;, &lt;strong&gt;City College EH&lt;/strong&gt;, &lt;strong&gt;City College Hourly&lt;/strong&gt;…etc. The code we’ll use to extract that will need to be able to catch all the variations. Luckily Pandas lets us do this very easily. In this case, a new variable named &lt;strong&gt;df_cc&lt;/strong&gt; is used to catch all the data that contains the word &lt;strong&gt;City College&lt;/strong&gt; in it.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df_cc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'DEPARTMENT'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'City College'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now that we have singled out only employees working at the City College, we want to look at the different positions people take and compare their salary levels. And let’s assume this time that we’re only intereste in people who are in teaching positions not administrative. Execute the following code and we’ll have a new variable named &lt;strong&gt;df_cc_prof&lt;/strong&gt; with data that only has &lt;strong&gt;Prof&lt;/strong&gt; and &lt;strong&gt;Lect&lt;/strong&gt; in the data.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;titles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dup&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;list_duplicates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_cc_prof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'TITLE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;titles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;searchfor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Prof'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Lect'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df_cc_prof&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_cc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_cc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'TITLE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'|'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;searchfor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))]&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Lastly, we use Plotly again to visualize the data.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;y0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_cc_prof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_cc_prof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'TITLE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Professor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SALARY'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_cc_prof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_cc_prof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'TITLE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Assoc Professor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SALARY'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_cc_prof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_cc_prof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'TITLE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Asst Professor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SALARY'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_cc_prof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_cc_prof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'TITLE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Adjunct Assoc Profess'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SALARY'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_cc_prof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_cc_prof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'TITLE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Adjunct Asst Professo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SALARY'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_cc_prof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_cc_prof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'TITLE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Adjunct Professor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SALARY'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y6&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_cc_prof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_cc_prof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'TITLE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Visiting Prof'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SALARY'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_cc_prof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_cc_prof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'TITLE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Visiting Assoc Profes'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SALARY'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y8&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_cc_prof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_cc_prof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'TITLE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Visiting Asst Profess'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SALARY'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y9&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_cc_prof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_cc_prof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'TITLE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Lecturer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SALARY'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_cc_prof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_cc_prof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'TITLE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Clinical Professor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SALARY'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y11&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_cc_prof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_cc_prof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'TITLE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Research Professor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SALARY'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;trace0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Professor&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;boxpoints&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'all'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;jitter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;pointpos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;trace1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Assoc Professor&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;boxpoints&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'all'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;jitter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;pointpos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;trace2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Asst Professor&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;boxpoints&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'all'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;jitter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;pointpos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;trace3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Adjunct Assoc Profess&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;boxpoints&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'all'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;jitter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;pointpos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;trace4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Adjunct Asst Professo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;boxpoints&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'all'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;jitter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;pointpos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;trace5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Adjunct Professor&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;boxpoints&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'all'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;jitter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;pointpos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;trace6&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Visiting Prof&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;boxpoints&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'all'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;jitter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;pointpos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;trace7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Visiting Assoc Profes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;boxpoints&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'all'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;jitter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;pointpos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;trace8&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Visiting Asst Profess&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;boxpoints&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'all'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;jitter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;pointpos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;trace9&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Lecturer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;boxpoints&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'all'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;jitter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;pointpos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;trace10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Clinical Professor&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;boxpoints&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'all'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;jitter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;pointpos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;trace11&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Research Professor&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;boxpoints&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'all'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;jitter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;pointpos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;City College Faculty Salary&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trace0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trace1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trace2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trace3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trace4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trace5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trace6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trace7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trace8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trace9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trace10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trace11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;iplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;s&quot;&gt;&quot;layout&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;500&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; src=&quot;//plot.ly/~tngai/86.embed&quot;&gt;&lt;/iframe&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;summary&quot;&gt;Summary&lt;/h1&gt;

&lt;h3 id=&quot;what-you-have-learned&quot;&gt;What You have Learned&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;How to create and assign value to a variable&lt;/li&gt;
  &lt;li&gt;How to create and assign values a list&lt;/li&gt;
  &lt;li&gt;How to create and assign values a list of lists&lt;/li&gt;
  &lt;li&gt;How to bring data into Python as text or csv files&lt;/li&gt;
  &lt;li&gt;How to create and use a counter&lt;/li&gt;
  &lt;li&gt;How to write a basic function&lt;/li&gt;
  &lt;li&gt;How to call a basic function&lt;/li&gt;
  &lt;li&gt;Basic loop structure - how to use for-loops&lt;/li&gt;
  &lt;li&gt;How to import packages in Python&lt;/li&gt;
  &lt;li&gt;How to use basic functions of packages like Pandas, Plotly, BeautifulSoup&lt;/li&gt;
  &lt;li&gt;How to create interactive plots with Plotly.
```&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;```&lt;/p&gt;
</description>
        <pubDate>Tue, 19 Feb 2019 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/itlworkshops/2019/DataViz01/</link>
        <guid isPermaLink="true">http://localhost:4000/itlworkshops/2019/DataViz01/</guid>
        
        
      </item>
    
      <item>
        <title>Data Science Intro - Installations</title>
        <description>&lt;hr /&gt;

&lt;h2 id=&quot;project-description&quot;&gt;Project Description&lt;/h2&gt;
&lt;p&gt;This module is preparation for the data visualization with Python workshop. No programming background is required. In this installation module, you will follow step-by-step instructions to install python and some of the most popular data processing / visualization libraries we will be suing for this workshop. You will be using Anaconda as a Python management software that is cross platform, thus all the instructions are the same between Windows, OSX and Linux.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;step-1&quot;&gt;Step 1&lt;/h1&gt;
&lt;h3 id=&quot;python-installation&quot;&gt;Python Installation&lt;/h3&gt;

&lt;p&gt;First you want to to install &lt;a href=&quot;https://www.anaconda.com/distribution/&quot; target=&quot;_blank&quot;&gt;Anaconda&lt;/a&gt;. Go to the website and download the Anaconda Installer, you want to go with Python 3 and the current version as of writing is Python 3.7.&lt;/p&gt;

&lt;p&gt;Once you have downloaded and installed Anaconda, open a &lt;a href=&quot;https://www.macworld.co.uk/how-to/mac-software/how-use-terminal-on-mac-3608274/&quot; target=&quot;_blank&quot;&gt;Terminal&lt;/a&gt;  if you’re on OSX or an &lt;a href=&quot;https://docs.anaconda.com/anaconda/user-guide/getting-started/&quot; target=&quot;_blank&quot;&gt;Anaconda Prompt&lt;/a&gt;  if you’re on Windows.&lt;/p&gt;

&lt;p&gt;You want to create a Virtual Environment for this exercise. The purpose of virtual environment is to create an isolated environment to contain all the packages you will install. What that literally means is everything you install, all the libraries and packages, including the python version, will be stored in a separate folder. There many reasons why this is a good practice. Since python is used from machine learning to webscraping to data visualization, sometimes you will encounter an application such as GIS that will require python version 2.7, whereas the machine learning framework from Google Tensorflow will only work with python version 3.5 (as of writing, the GPU optimized version only works with Python 3.5 if you use a particular GPU hardware). So virtual environment is a very convenient way to isolate and manage your python installations.&lt;/p&gt;

&lt;p&gt;To create a virtual environment in &lt;a href=&quot;https://www.anaconda.com/distribution/&quot; target=&quot;_blank&quot;&gt;Anaconda&lt;/a&gt; , in the &lt;a href=&quot;https://www.macworld.co.uk/how-to/mac-software/how-use-terminal-on-mac-3608274/&quot; target=&quot;_blank&quot;&gt;Terminal&lt;/a&gt;  or &lt;a href=&quot;https://docs.anaconda.com/anaconda/user-guide/getting-started/&quot; target=&quot;_blank&quot;&gt;Anaconda Prompt&lt;/a&gt; , type:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;conda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataviz&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;python&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;3.6&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/pic_anaconda_env.jpg&quot; alt=&quot;test image size&quot; height=&quot;40%&quot; width=&quot;40%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When asked to proceed, click Y and press Enter. For a more in-depth write up on Anaconda Environments, press the button below for a deep-dive into the subject.&lt;/p&gt;

&lt;center&gt;&lt;button class=&quot;button&quot;&gt;
		&lt;a href=&quot;https://conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html&quot; target=&quot;_blank&quot;&gt;Deep Dive: Virtual Environments&lt;/a&gt;
&lt;/button&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Now that you have Anaconda and Python running in your system, you want to activate the environment you just created and then start installing all the packages that we will use in this workshop. First activate the environment by typing this in the Terminal or Anaconda Prompt.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;conda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataviz&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you’re successful in activating the virtual environment, you should see the name of the enviroment appear in brackets. And congratulations, you are now ready to dive into the vast and exciting world python libraries.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/pic_anaconda_activate_env.jpg&quot; alt=&quot;test image size&quot; height=&quot;50%&quot; width=&quot;50%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;step-2&quot;&gt;Step 2&lt;/h1&gt;
&lt;h3 id=&quot;jupyter-notebook-installation&quot;&gt;Jupyter Notebook Installation&lt;/h3&gt;
&lt;p&gt;Next we will install &lt;a href=&quot;https://jupyter.org/index.html&quot;&gt;Jupyter Notebook&lt;/a&gt; by typing the following command in Terminal or Anaconda Prompt, and type Y when asked to Proceed.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;conda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jupyter&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/pic_jupyter.jpg&quot; alt=&quot;test image size&quot; height=&quot;50%&quot; width=&quot;50%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Jupyte Notebook is an Interactive Computing Environment that allows your to get immediate feedback when coding, and it is a full featured Python IDE that automatically formats your code properly. It makes programming much more visual and intuitive and we will use it exclusively in our workshop.&lt;/p&gt;

&lt;h3 id=&quot;installing-other-python-packages&quot;&gt;Installing Other Python Packages&lt;/h3&gt;
&lt;p&gt;Next we will install &lt;a href=&quot;https://plot.ly/python/getting-started/&quot; target=&quot;_blank&quot;&gt;Plotly&lt;/a&gt;, &lt;a href=&quot;https://pypi.org/project/numpy/&quot; target=&quot;_blank&quot;&gt;Numpy&lt;/a&gt;, &lt;a href=&quot;https://pypi.org/project/beautifulsoup4/&quot; target=&quot;_blank&quot;&gt;Beautifulsoup&lt;/a&gt;, &lt;a href=&quot;https://scikit-learn.org/stable/index.html&quot; target=&quot;_blank&quot;&gt;SCIKIT-Learn&lt;/a&gt;, &lt;a href=&quot;https://matplotlib.org/&quot; target=&quot;_blank&quot;&gt;Matplotlib&lt;/a&gt; and &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/install.html&quot; target=&quot;_blank&quot;&gt;Pandas&lt;/a&gt; by typing the following command in Terminal or Anaconda Prompt.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;conda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plotly&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scikit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;learn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matplotlib&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;basemap&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;netcdf4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;pip&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;beautifulsoup4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://plot.ly/python/getting-started/&quot; target=&quot;_blank&quot;&gt;Plotly&lt;/a&gt; is a dynamic graphing web application. It lets you make beautiful interactive plots easily.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://pypi.org/project/numpy/&quot; target=&quot;_blank&quot;&gt;Numpy&lt;/a&gt; is a library that deal with multidimensional arrays or matrices, it’s an essential library for many scientific computing and image processing applications.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://pypi.org/project/beautifulsoup4/&quot; target=&quot;_blank&quot;&gt;Beautifulsoup&lt;/a&gt; is a webscraping module that lets you access and collect data online easily.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://scikit-learn.org/stable/index.html&quot; target=&quot;_blank&quot;&gt;SCIKIT-Learn&lt;/a&gt; is an essential toolkit for data processing and machine learning.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://matplotlib.org/&quot; target=&quot;_blank&quot;&gt;Matplotlib&lt;/a&gt; is a graphing library that handles much of the non-dynamic graphics&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://matplotlib.org/&quot; target=&quot;_blank&quot;&gt;Basemap&lt;/a&gt; is a graphing library that handles much of the non-dynamic graphics&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/install.html&quot; target=&quot;_blank&quot;&gt;Pandas&lt;/a&gt; is a library for data processing.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;step-3&quot;&gt;Step 3&lt;/h1&gt;
&lt;h3 id=&quot;launch-jupyter-notebook&quot;&gt;Launch Jupyter Notebook&lt;/h3&gt;
&lt;p&gt;Next, we  create a folder where all the coding files will reside. In my case, I’ll create a folder on my desktop call dataviz. You can do that where ever you want. Once the folder has been created, go back to your Terminal or Anaconda Prompt, then type cd and then type in the path to your newly created folder, then press &lt;strong&gt;Enter&lt;/strong&gt;. *If you don’t like typing the full path of your folder by hand, follow this tip.&lt;/p&gt;

&lt;center&gt;&lt;button class=&quot;button&quot;&gt;
	&lt;a href=&quot;https://searchenterprisedesktop.techtarget.com/photostory/2240216625/Ten-hidden-Windows-command-prompt-tricks/11/Drag-and-drop-a-folder-to-open-command-prompt&quot; target=&quot;_blank&quot;&gt;Tip Windows&lt;/a&gt;
&lt;/button&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;center&gt;&lt;button class=&quot;button&quot;&gt;&lt;a href=&quot;http://osxdaily.com/2009/11/23/copy-a-files-path-to-the-terminal-by-dragging-and-dropping/&quot; target=&quot;_blank&quot;&gt;Tip OSX&lt;/a&gt;
&lt;/button&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tedngai&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Desktop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataviz&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/pic_desktopfolder.jpg&quot; alt=&quot;test image size&quot; height=&quot;50%&quot; width=&quot;50%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once you’re in your newly created folder, launch Jupyter Notebook by typing the following. It will launch your web browser and should open the web app, and you should see Jupyter and your current folder location.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(dataviz)patatchi:Dataviz tedngai$ jupyter notebook
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/pic_jupyternotebook_launch.jpg&quot; alt=&quot;test image size&quot; height=&quot;50%&quot; width=&quot;50%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Last but not least, click the New button at the near top right and click on Python 3 to create a new notebook. And congratulations, if you are able to get to this point, you are all set to do some exciting programming. If you have trouble getting things to work thus far, please carefully review the steps and make sure you have your virtual environment activated and you are in the proper folder. If you continue to have problem, please feel free to contact us via Slack or email.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/images/pic_jupyternotebook_new.jpg&quot; alt=&quot;jupyter new notebook&quot; height=&quot;50%&quot; width=&quot;50%&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;summary&quot;&gt;Summary&lt;/h1&gt;

&lt;h3 id=&quot;what-you-have-accomplished&quot;&gt;What You have Accomplished&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;How to install Anaconda and Python&lt;/li&gt;
  &lt;li&gt;How to install any Python libraries&lt;/li&gt;
  &lt;li&gt;How to launch and work with Jupyter Notebook&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 18 Feb 2019 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/itlworkshops/2019/DataSci01/</link>
        <guid isPermaLink="true">http://localhost:4000/itlworkshops/2019/DataSci01/</guid>
        
        
      </item>
    
      <item>
        <title>Data Visualization Workshop Climate Data Visualization</title>
        <description>&lt;p&gt;&lt;strong&gt;&lt;center&gt; Global wind speed when Storm Sandy made landfall in New York&lt;/center&gt;&lt;/strong&gt;
&lt;img src=&quot;../../assets/images/climate/20121028022807-windspeed.png&quot; alt=&quot;20121028022807-windspeed&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;project-description&quot;&gt;Project Description&lt;/h2&gt;

&lt;p&gt;This workshop will go through some basic workflow for accessing and visualizing climate data using Python. You can find many datasets from NASA’s &lt;a href=&quot;https://disc.gsfc.nasa.gov/&quot; target=&quot;_blank&quot;&gt;Goddard Earth Science Data and Information Services Center’s Earth Data portal&lt;/a&gt;. It is an invaluable resource and we have access to climate data at the global level all the way back to 1980. This workshop will focus mainly on the techniques to handle NetCDF file format and to display global maps within iPython. The material presented should allow you understand, access, and visualize many datasets. And for this session we will use dataset from the &lt;strong&gt;Modern-Era Retrospective analysis for Research and Applications version 2 (MERRA-2)&lt;/strong&gt; to look at global air temperature, and from the &lt;strong&gt;Gravity Recovery and Climate Experiment Data Assimilation Product Version2.0 (GRACE-DA-DM v2.0)&lt;/strong&gt; to look at groundwater and soil moisture conditions  .&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;step-1&quot;&gt;Step 1&lt;/h1&gt;
&lt;h3 id=&quot;python-installation&quot;&gt;Python Installation&lt;/h3&gt;

&lt;p&gt;Please follow the steps detailed in the &lt;a href=&quot;https://tedngai.github.io/itlworkshops/2019/DataSci01/&quot; target=&quot;_blank&quot;&gt;Data Science Intro&lt;/a&gt;  for instructions to install Anaconda and create virtual environments. There is step-by-step instructions there.&lt;/p&gt;

&lt;p&gt;You will want to create a new virtual environment for this workshop, and you will need the following packages, netCDF4, numpy, matplotlib, and basemap. First create a new virtual environment.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;conda create -n climateViz python=3.7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Once it’s done, activtate the envionrment&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;conda activate climateViz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now install the following packages&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;conda install numpy netCDF4 matplotlib basemap
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;step-2&quot;&gt;Step 2&lt;/h1&gt;
&lt;h3 id=&quot;download-climate-data&quot;&gt;Download Climate Data&lt;/h3&gt;

&lt;p&gt;To access NASA’s climate data, you need to register with Earthdata and agree to a few End User License Agreements.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Follow the steps &lt;a href=&quot;https://disc.gsfc.nasa.gov/data-access&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt; to register with Earthdata.&lt;/li&gt;
  &lt;li&gt;After registration, go to &lt;a href=&quot;https://disc.gsfc.nasa.gov/&quot; target=&quot;_blank&quot;&gt;Earth Data Portal&lt;/a&gt; and search for &lt;strong&gt;M2TMNXSLV&lt;/strong&gt;. Then Click on the link.&lt;/li&gt;
  &lt;li&gt;You can access the data in multiple ways, but for our purpose, click &lt;strong&gt;Online Archive&lt;/strong&gt;. This is a monthly dataset that dates back to 1980. You can choose any dataset you desire. For this exercise, we are using the data from Dec 2012. Click on &lt;strong&gt;&lt;a href=&quot;https://goldsmr4.gesdisc.eosdis.nasa.gov/data/MERRA2_MONTHLY/M2TMNXSLV.5.12.4/2012/MERRA2_400.tavgM_2d_slv_Nx.201212.nc4&quot;&gt;MERRA2_400.tavgM_2d_slv_Nx.201212.nc4&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You should now have a the file in your local drive. Move the file to a new folder, open a &lt;strong&gt;Terminal&lt;/strong&gt; or &lt;strong&gt;Anaconda Prompt&lt;/strong&gt; and go to the directory that contains the downloaded file, then type &lt;strong&gt;Jupyter Notebook&lt;/strong&gt; and create a new notebook.&lt;/p&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;step-3&quot;&gt;Step 3&lt;/h1&gt;

&lt;h3 id=&quot;visualize-data&quot;&gt;Visualize Data&lt;/h3&gt;

&lt;p&gt;The following workflow is built on the &lt;a href=&quot;https://disc.gsfc.nasa.gov/information/howto?title=How%20to%20read%20and%20plot%20NetCDF%20MERRA-2%20data%20in%20Python&quot; target=&quot;_blank&quot;&gt;How to read and plot NetCDF MERRA-2 data in Python&lt;/a&gt; provided by GES DISC. The howto provided assumes an audience with programming experience whereas this workshop does not, so we will look more specifically into the functions and explain each step in more details.&lt;/p&gt;

&lt;p&gt;First you need to import all the relevant libraries python will use.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;netCDF4&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dataset&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.cm&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cm&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;mpl_toolkits.basemap&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Basemap&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Now import the dataset into a variable.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dataset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'MERRA2_400.tavgM_2d_slv_Nx.201212.nc4'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What we need to know is what kind of data is contained in the NetCDF file. NetCDF (Network Common Data Form) is a “self-describing” file format that contains all the metadata and is used primarily for sharing scientific data. Thus, once we loaded the file, we can access what is inside the dataset by printing the metadata.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root group (NETCDF4 data model, file format HDF5):
    History: Original file generated: Mon Jul  6 14:42:10 2015 GMT
    Filename: MERRA2_400.tavgM_2d_slv_Nx.201212.nc4
    Comment: GMAO filename: d5124_m2_jan10.tavg1_2d_slv_Nx.monthly.201212.nc4
    Conventions: CF-1
    Institution: NASA Global Modeling and Assimilation Office
    References: http://gmao.gsfc.nasa.gov
    Format: NetCDF-4/HDF-5
    SpatialCoverage: global
    VersionID: 5.12.4
    TemporalRange: 1980-01-01 -&amp;gt; 2016-12-31
    identifier_product_doi_authority: http://dx.doi.org/
    ShortName: M2TMNXSLV
    RangeBeginningDate: 2012-12-01
    RangeEndingDate: 2012-12-31
    GranuleID: MERRA2_400.tavgM_2d_slv_Nx.201212.nc4
    ProductionDateTime: Original file generated: Mon Jul  6 14:42:10 2015 GMT
    LongName: MERRA2 tavg1_2d_slv_Nx: 2d,1-Hourly,Time-Averaged,Single-Level,Assimilation,Single-Level Diagnostics Monthly Mean
    Title: MERRA2 tavg1_2d_slv_Nx: 2d,1-Hourly,Time-Averaged,Single-Level,Assimilation,Single-Level Diagnostics Monthly Mean
    SouthernmostLatitude: -90.0
    NorthernmostLatitude: 90.0
    WesternmostLongitude: -180.0
    EasternmostLongitude: 179.375
    LatitudeResolution: 0.5
    LongitudeResolution: 0.625
    DataResolution: 0.5 x 0.625
    Source: CVS tag: GEOSadas-5_12_4
    Contact: http://gmao.gsfc.nasa.gov
    identifier_product_doi: 10.5067/AP1B0BA5PD2K
    RangeBeginningTime: 00:00:00.000000
    RangeEndingTime: 23:59:59.000000
    dimensions(sizes): lon(576), lat(361), time(1)
    variables(dimensions): float64 lon(lon), float64 lat(lat), int32 time(time)...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;What we are interested in is in the variables section. We want to see how many variables there are and how the data is structured. Type &lt;code class=&quot;highlighter-rouge&quot;&gt;len(data.variables)&lt;/code&gt; and you can see there are 97 variables, but the variable names are coded and it’s hard to understand what they are. You can access more information by typing&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;print(data.variables)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;You will see a print out of all the metadata for the specific variables. You will find a more descriptive long name, units, data type, and dimensions. As you go into the description, you will find that there are many interesting variables in this file such as &lt;strong&gt;TQV&lt;/strong&gt; (Total Precipitable Water Vapor), &lt;strong&gt;TQL&lt;/strong&gt; (Total Precipitable Liquid Water), &lt;strong&gt;TOX&lt;/strong&gt; (Total Column Odd Oxygen), &lt;strong&gt;TO3&lt;/strong&gt; (Total column Ozone)…etc. What we will look at for this exercise is the &lt;strong&gt;T2M&lt;/strong&gt; (2-meter Air Tempeature ).&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;('lon', &amp;lt;class 'netCDF4._netCDF4.Variable'&amp;gt;
float64 lon(lon)
    long_name: longitude
    units: degrees_east
    vmax: 1000000000000000.0
    vmin: -1000000000000000.0
    valid_range: [-1.e+15  1.e+15]
unlimited dimensions: 
current shape = (576,)
filling on, default _FillValue of 9.969209968386869e+36 used
),

('lat', &amp;lt;class 'netCDF4._netCDF4.Variable'&amp;gt;
float64 lat(lat)
    long_name: latitude
    units: degrees_north
    vmax: 1000000000000000.0
    vmin: -1000000000000000.0
    valid_range: [-1.e+15  1.e+15]
unlimited dimensions: 
current shape = (361,)
filling on, default _FillValue of 9.969209968386869e+36 used
),

('T2M', &amp;lt;class 'netCDF4._netCDF4.Variable'&amp;gt;
float32 T2M(time, lat, lon)
    long_name: 2-meter_air_temperature
    units: K
    _FillValue: 1000000000000000.0
    missing_value: 1000000000000000.0
    fmissing_value: 1000000000000000.0
    vmax: 1000000000000000.0
    vmin: -1000000000000000.0
    valid_range: [-1.e+15  1.e+15]
unlimited dimensions: time
current shape = (1, 361, 576)
filling on)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Create the following new variables. Notice the &lt;code class=&quot;highlighter-rouge&quot;&gt;[]&lt;/code&gt; after the variables, they specify the dimension of the data you want to create.  Both &lt;strong&gt;longitude&lt;/strong&gt; and &lt;strong&gt;latitude&lt;/strong&gt; are 1 dimension whereas &lt;strong&gt;T2M&lt;/strong&gt; has 3 dimensions as is described - &lt;strong&gt;float32 T2M(time, lat, lon)&lt;/strong&gt; and &lt;strong&gt;current shape = (1, 361, 576)&lt;/strong&gt;. Since this file is a monthly dataset and we only downloaded only for a specific month, the time dimension has only 1 layer of data, therefore &lt;code class=&quot;highlighter-rouge&quot;&gt;[0,:,:]&lt;/code&gt; is used.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;lons&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'lon'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][:]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lats&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'lat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][:]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;T2M&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'T2M'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,:,:]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now we setup a map with all the relevant parameters such as projection, resolution, meshgrid…etc. For more information on basemap parameters and functionality.&lt;/p&gt;

&lt;center&gt;&lt;button class=&quot;button&quot;&gt;
	&lt;a href=&quot;https://matplotlib.org/basemap/api/basemap_api.html&quot; target=&quot;_blank&quot;&gt;Deep Dive: Basemap API Parameters&lt;/a&gt;
&lt;/button&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;center&gt;&lt;button class=&quot;button&quot;&gt;
	&lt;a href=&quot;https://matplotlib.org/basemap/users/mapsetup.html&quot; target=&quot;_blank&quot;&gt;Deep Dive: Map Projections&lt;/a&gt;
&lt;/button&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Basemap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resolution&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'l'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;projection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'gall'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lat_0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lon_0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meshgrid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;xi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Numpy’s meshgrid creates a 2-dimensional array from latitude and longitude. &lt;code class=&quot;highlighter-rouge&quot;&gt;map(lon, lat)&lt;/code&gt; takes the world coordinates and project them to the map’s coordinate.  If you check the  shape of the variables, you should see they all have the same dimensionality.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;print(xi.shape, yi.shape, T2M.shape)
(361, 576) (361, 576) (361, 576)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Now it’s time to plot.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figsize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dpi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;frameon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;cs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pcolor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;squeeze&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T2M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vmin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T2M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vmax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T2M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_edgecolor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'face'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drawcoastlines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drawcountries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savefig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'MERRA2-2m_airTemp_Test.png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bbox_inches&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'tight'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pad_inches&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;plt.figure&lt;/code&gt; sets the dimension of the plot. &lt;code class=&quot;highlighter-rouge&quot;&gt;figsize&lt;/code&gt; is in inches and multiply that with &lt;code class=&quot;highlighter-rouge&quot;&gt;dpi&lt;/code&gt; you get a pixel count. &lt;code class=&quot;highlighter-rouge&quot;&gt;map.pcolor&lt;/code&gt; we set the vallues for x, y, temperature. &lt;code class=&quot;highlighter-rouge&quot;&gt;vmin&lt;/code&gt; is the lowest temperature value and &lt;code class=&quot;highlighter-rouge&quot;&gt;vmax&lt;/code&gt; is the highest temperature value. &lt;code class=&quot;highlighter-rouge&quot;&gt;cmap&lt;/code&gt; sets the colormap option and in this case we are using &lt;strong&gt;jet&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;center&gt; Global Air Temperature&lt;/center&gt;&lt;/strong&gt;
&lt;img src=&quot;../../assets/images/climate/MERRA2-2m_airTemp_Test.png&quot; alt=&quot;MERRA2-2m_airTemp_Test&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;step-4&quot;&gt;Step 4&lt;/h1&gt;

&lt;h3 id=&quot;visualize-multiple-sets-of-data&quot;&gt;Visualize Multiple Sets of Data&lt;/h3&gt;

&lt;p&gt;Now let’s try to step it up and develop a more practical workflow. Since these types of data is much more informative when you look at longer duration and as a time series. Earthdata provide you with a way to download mutliple files via &lt;strong&gt;wget&lt;/strong&gt; or &lt;strong&gt;curl&lt;/strong&gt;, you will need to setup your credentials and save it in a cookie. Follow the instructions here: &lt;a href=&quot;https://disc.gsfc.nasa.gov/data-access&quot; target=&quot;_blank&quot;&gt;Earthdata cookie setup&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you have setup the &lt;strong&gt;cookie&lt;/strong&gt; and &lt;strong&gt;credentials&lt;/strong&gt;, follow this page for instructions to setup mass download.&lt;/p&gt;

&lt;center&gt;&lt;button class=&quot;button&quot;&gt;
	&lt;a href=&quot;https://disc.gsfc.nasa.gov/information/howto?title=How%20to%20Download%20Data%20Files%20from%20HTTPS%20Service%20with%20wget&quot; target=&quot;_blank&quot;&gt;Download Multiple Files&lt;/a&gt;
&lt;/button&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;If everything is setup correctly, you should be able to download all the .nc4 files with this command. Make sure to run the command in a directory where all the  files will be stored. For this next example, we will look at the &lt;a href=&quot;https://hydro1.gesdisc.eosdis.nasa.gov/data/GRACEDA/GRACEDADM_CLSM0125US_7D.2.0/2014/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Ground Water Storage Percentile&lt;/strong&gt;&lt;/a&gt; of the US. The dataset is weekly so there are a total of 52 files. We will create a new folder name &lt;strong&gt;GRACEDADM2014&lt;/strong&gt; and place all the files there. When you have everything setup, run the following command in a separate &lt;strong&gt;Terminal&lt;/strong&gt; or &lt;strong&gt;Anaconda Prompt&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget --load-cookies ~/.urs_cookies --save-cookies ~/.urs_cookies --keep-session-cookies -r -c -nH -nd -np -A nc4 --content-disposition &quot;https://hydro1.gesdisc.eosdis.nasa.gov/data/GRACEDA/GRACEDADM_CLSM0125US_7D.2.0/2014/&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Back in Jupyter, we will create a new notebook and start from the beginning. It will be very similar to the previou example except this time we will be visualizing all 52 sets of data at once.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;netCDF4&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dataset&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.cm&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cm&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;mpl_toolkits.basemap&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Basemap&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;addNC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dataset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;findMinMax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;minVal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;maxVal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;minVal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'gws_inst'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,:,:]))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;maxVal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'gws_inst'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,:,:]))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;minVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maxVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    
&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'./files/GRACEDADM2014/'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;nc4s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;walk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'.nc4'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;nc4s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;nc4s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;alldata&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;addNC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;u&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nc4s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We are writing 2 functions, 1 to read the dataset which will be appended to the &lt;strong&gt;alldata&lt;/strong&gt; variable, and the other is to find the maximum and minimum value across all 52 files for colormapping.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Vmin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Vmax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;findMinMax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alldata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alldata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lons&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'lon'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][:]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lats&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'lat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][:]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;gws_inst&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'gws_inst'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,:,:]&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Basemap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resolution&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'l'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;projection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'gall'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lat_0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lats&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lon_0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lons&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
             &lt;span class=&quot;n&quot;&gt;llcrnrlat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lats&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urcrnrlat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lats&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
             &lt;span class=&quot;n&quot;&gt;llcrnrlon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lons&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urcrnrlon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lons&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meshgrid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;xi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;figsize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dpi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;frameon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pcolor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;squeeze&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gws_inst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vmin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Vmin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vmax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Vmax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rainbow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_edgecolor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'face'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drawcoastlines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drawstates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drawcountries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nc4s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;47&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.96&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.02&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savefig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nc4s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;47&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'.png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bbox_inches&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'tight'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pad_inches&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The only difference with this code is all the map generation happens within a loop and all the files are saved with the same name as the original file. &lt;code class=&quot;highlighter-rouge&quot;&gt;plt.clf()&lt;/code&gt; is used to clear the memory buffer. All the images can then be used to create an animated gif like the following.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;center&gt; Ground Water Storage Percentile&lt;/center&gt;&lt;/strong&gt;
&lt;img src=&quot;../../assets/images/climate/GRACEDADM2014.gif&quot; alt=&quot;GRACEDADM2014&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 08 Feb 2019 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/itlworkshops/2019/GIS_Workshop_ClimateViz/</link>
        <guid isPermaLink="true">http://localhost:4000/itlworkshops/2019/GIS_Workshop_ClimateViz/</guid>
        
        
      </item>
    
  </channel>
</rss>
